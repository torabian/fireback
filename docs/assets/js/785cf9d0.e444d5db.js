"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[817],{4736:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"definitions/remotes","title":"Fireback Remotes","description":"Remotes, are a unique feature of fireback modules that you can use to create requets (http for example),","source":"@site/docs/definitions/remotes.md","sourceDirName":"definitions","slug":"/definitions/remotes","permalink":"/fireback/docs/docs/definitions/remotes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/definitions/remotes.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Fireback \u2010 Ultimate Go FullStack Framework","permalink":"/fireback/docs/docs/intro"},"next":{"title":"Fireback Module3 Definition","permalink":"/fireback/docs/docs/definitions/module3"}}');var i=n(4848),s=n(8453);const r={sidebar_position:1},a="Fireback Remotes",c={},d=[{value:"Definition",id:"definition",level:2},{value:"Features",id:"features",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"fireback-remotes",children:"Fireback Remotes"})}),"\n",(0,i.jsx)(t.p,{children:"Remotes, are a unique feature of fireback modules that you can use to create requets (http for example),\nto an external API which is not in your project."}),"\n",(0,i.jsx)(t.p,{children:"Assume you want to make a call to an external API and get, and create a transation on a payment provider.\nYou can define a remote for add action, and then it will be accessible in your go code as a type-safe\nfunction. Underneath, it uses retryable-http library instead of default go http library.\nYou could modify the default client instance as well."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"remotes:\n  - url: https://sandbox.przelewy24.pl/api/v1/transaction/register\n    method: post\n    name: registerTransaction\n    in:\n      fields:\n      - name: merchantId\n        type: int64\n      - name: posId\n        type: int64\n      - name: amount\n        type: int64\n      - name: sessionId\n        type: string\n    out:\n      fields:\n        - name: token\n          type: string\n"})}),"\n",(0,i.jsxs)(t.p,{children:["After saving this, there will be a ",(0,i.jsx)(t.code,{children:"ModuleNameRemotes"})," object added to your module, and ",(0,i.jsx)(t.code,{children:"RegisterTransaction"}),"\nfunction will become available, and callable without any configuration."]}),"\n",(0,i.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,i.jsxs)(t.p,{children:["You can check the definition actual struct in ",(0,i.jsx)(t.code,{children:"fireback"})," source code repository, take a look there for most\nrecent changes, but an overview here is also provided."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Method:"})," Http method, lower case post, delete, ..."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Url:"})," The url which will be requested. You need to add full url here, but maybe you could add a prefix\nalso in the client from your Go code - There might be a prefix for remotes later version of fireback"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Out:"})," Standard Module2ActionBody object. Could have fields, entity, dto as content and you\ncan define the output to cast automatically into them."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"In:"})," Standard Module2ActionBody object. Could have fields, entity, dto as content and you\ncan define the input parameters as struct in Go and fireback will convert it into json."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Query:"})," Query params for the address, if you want to define them in Golang dynamically instead of URL"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Name:"})," Remote action name, it will become the Golang function that you will call"]}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"It would be suitable to document the external calls for common json requests, post, get, with a specific\nbody or specific response. The original response object is also returned in case the code is not sufficient"}),"\n",(0,i.jsx)(t.li,{children:"It's not there on 1.1.27, but there is a plan to be able to use remotes with sockets, so if external API\nis providing a websocket, it would subscribe to it and send content over there"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);