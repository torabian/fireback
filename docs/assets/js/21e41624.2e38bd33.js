"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[832],{2019:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"http-server","title":"Starting web server","description":"Fireback itself, or any projects, microservices built using fireback can serve on http,","source":"@site/docs/http-server.mdx","sourceDirName":".","slug":"/http-server","permalink":"/fireback/docs/docs/http-server","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/http-server.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Starting web server","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Fireback Workspaces tables and features","permalink":"/fireback/docs/docs/workspaces"},"next":{"title":"Passports Introduction","permalink":"/fireback/docs/docs/passports-module"}}');var o=n(4848),i=n(8453);const s={title:"Starting web server",sidebar_position:6},a=void 0,c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Fireback itself, or any projects, microservices built using fireback can serve on http,\nusing ",(0,o.jsx)(t.code,{children:"fireback start"})," command. It would lift normal gin http server will all routes."]}),"\n",(0,o.jsxs)(t.p,{children:["You can set ",(0,o.jsx)(t.code,{children:"PORT"})," env variable, or set the port in configuration file as well. environment variable\nwill override the configuration, which overrides 4500 default port."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'ali@alis-MacBook-Pro ~ % fireback start\n\n[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.\n\n[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.\n - using env:\texport GIN_MODE=release\n - using code:\tgin.SetMode(gin.ReleaseMode)\n\n[GIN-debug] GET    /socket.io/*any           --\x3e github.com/gin-gonic/gin.WrapH.func1 (4 handlers)\n[GIN-debug] POST   /socket.io/*any           --\x3e github.com/gin-gonic/gin.WrapH.func1 (4 handlers)\n[GIN-debug] GET    /books                    --\x3e pixelplux.com/fireback/modules/books.HttpQueryBooks (4 handlers)\n...\n'})}),"\n",(0,o.jsxs)(t.p,{children:["If you are running fireback itself, you can see an open api document on ",(0,o.jsx)(t.code,{children:"http://localhost:4500/docs"}),"\nand also fireback administration ui on ",(0,o.jsx)(t.code,{children:"http://localhost:4500"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"For projects built manually you might need to create your own UI and place it into your binary,\nif thats how you would like to distribute UI."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var r=n(6540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);