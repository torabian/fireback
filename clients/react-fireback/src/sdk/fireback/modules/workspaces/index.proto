syntax = "proto3";
    
    option go_package = "./artifacts/fireback-server/release-tsjs/modules/workspaces";

import "artifacts/fireback-server/release-tsjs/core/common.proto";




  

;
  

  

      
service AppMenus {
  rpc AppMenuActionCreate (AppMenuEntity) returns (AppMenuCreateReply) {}
  rpc AppMenuActionUpdate (AppMenuEntity) returns (AppMenuCreateReply) {}

  rpc AppMenuActionQuery (QueryFilterRequest) returns (AppMenuQueryReply) {}
  rpc AppMenuActionGetOne (QueryFilterRequest) returns (AppMenuReply) {}
  rpc AppMenuActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message AppMenuCreateReply {
	AppMenuEntity data  = 1;
	IError error = 2;
}

message AppMenuReply {
	AppMenuEntity data = 1;
	IError error = 2;
}

message AppMenuQueryReply {
	repeated AppMenuEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message AppMenuEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional AppMenuEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  repeated AppMenuEntityPolyglot translations = 8; // @tag(gorm:"foreignKey:LinkerId;references:UniqueId" json:"translations")
  optional string href = 10; // @tag(  yaml:"href"  )

  optional string icon = 11; // @tag(  yaml:"icon"  )

  optional string label = 12; // @tag(translate:"true"  yaml:"label"  )

  optional string activeMatcher = 13; // @tag(  yaml:"activeMatcher"  )

  optional string applyType = 14; // @tag(  yaml:"applyType"  )

  /* One 2 one to external entity */
  optional string capabilityId  = 16; // @tag(yaml:"capabilityId" )
  CapabilityEntity capability = 17; // @tag(gorm:"foreignKey:CapabilityId;references:UniqueId" json:"capability" yaml:"capability" fbtype:"one")

  int64 rank = 18; // @tag(gorm:"type:int;name:rank")
  int64 updated = 19; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 20; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 21; // @tag(sql:"-")
  string updatedFormatted = 22; // @tag(sql:"-")
  repeated AppMenuEntity children = 23; // @tag(gorm:"-" sql:"-")
}

/* Because it has translation field, we need a translation table for this */
message AppMenuEntityPolyglot {
  string linkerId = 1; // @tag(gorm:"uniqueId;not null;size:100;" json:"linkerId" yaml:"linkerId")
  string languageId = 2; // @tag(gorm:"uniqueId;not null;size:100;" json:"languageId" yaml:"languageId")

  string label = 3; // @tag(yaml:"label" json:"label");

}


















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      










    




 
message BackupReqDto {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional BackupReqDto parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  repeated string entities = 9; // @tag(yaml:"entities" fbtype:"arrayp")

  int64 rank = 10; // @tag(gorm:"type:int;name:rank")
  int64 updated = 11; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 12; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 13; // @tag(sql:"-")
  string updatedFormatted = 14; // @tag(sql:"-")
}









  

  

  

      
service BackupTableMetas {
  rpc BackupTableMetaActionCreate (BackupTableMetaEntity) returns (BackupTableMetaCreateReply) {}
  rpc BackupTableMetaActionUpdate (BackupTableMetaEntity) returns (BackupTableMetaCreateReply) {}

  rpc BackupTableMetaActionQuery (QueryFilterRequest) returns (BackupTableMetaQueryReply) {}
  rpc BackupTableMetaActionGetOne (QueryFilterRequest) returns (BackupTableMetaReply) {}
  rpc BackupTableMetaActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message BackupTableMetaCreateReply {
	BackupTableMetaEntity data  = 1;
	IError error = 2;
}

message BackupTableMetaReply {
	BackupTableMetaEntity data = 1;
	IError error = 2;
}

message BackupTableMetaQueryReply {
	repeated BackupTableMetaEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message BackupTableMetaEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional BackupTableMetaEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string tableNameInDb = 9; // @tag(  yaml:"tableNameInDb"  )

  int64 rank = 10; // @tag(gorm:"type:int;name:rank")
  int64 updated = 11; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 12; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 13; // @tag(sql:"-")
  string updatedFormatted = 14; // @tag(sql:"-")
}












/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service Capabilitys {
  rpc CapabilityActionCreate (CapabilityEntity) returns (CapabilityCreateReply) {}
  rpc CapabilityActionUpdate (CapabilityEntity) returns (CapabilityCreateReply) {}

  rpc CapabilityActionQuery (QueryFilterRequest) returns (CapabilityQueryReply) {}
  rpc CapabilityActionGetOne (QueryFilterRequest) returns (CapabilityReply) {}
  rpc CapabilityActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message CapabilityCreateReply {
	CapabilityEntity data  = 1;
	IError error = 2;
}

message CapabilityReply {
	CapabilityEntity data = 1;
	IError error = 2;
}

message CapabilityQueryReply {
	repeated CapabilityEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message CapabilityEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional CapabilityEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string name = 9; // @tag(  yaml:"name"  )

  int64 rank = 10; // @tag(gorm:"type:int;name:rank")
  int64 updated = 11; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 12; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 13; // @tag(sql:"-")
  string updatedFormatted = 14; // @tag(sql:"-")
}











;

/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      
message CapabilityChild {
	string uniqueId = 1;
	repeated CapabilityChild children = 2;
	optional string visibility = 3; // @tag(yaml:"visibility")
	int64 updated = 4; // @tag(gorm:"autoUpdateTime:nano")
  	int64 created = 5; // @tag(gorm:"autoUpdateTime:nano")
}


message CapabilitiesResult {
	repeated CapabilityEntity capabilities = 1;
	repeated CapabilityChild nested = 2;
	optional string visibility = 3; // @tag(yaml:"visibility")
	int64 updated = 4; // @tag(gorm:"autoUpdateTime:nano")
  	int64 created = 5; // @tag(gorm:"autoUpdateTime:nano")

}



  

;
  

  

      
service EmailConfirmations {
  rpc EmailConfirmationActionCreate (EmailConfirmationEntity) returns (EmailConfirmationCreateReply) {}
  rpc EmailConfirmationActionUpdate (EmailConfirmationEntity) returns (EmailConfirmationCreateReply) {}

  rpc EmailConfirmationActionQuery (QueryFilterRequest) returns (EmailConfirmationQueryReply) {}
  rpc EmailConfirmationActionGetOne (QueryFilterRequest) returns (EmailConfirmationReply) {}
  rpc EmailConfirmationActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message EmailConfirmationCreateReply {
	EmailConfirmationEntity data  = 1;
	IError error = 2;
}

message EmailConfirmationReply {
	EmailConfirmationEntity data = 1;
	IError error = 2;
}

message EmailConfirmationQueryReply {
	repeated EmailConfirmationEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message EmailConfirmationEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional EmailConfirmationEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  UserEntity user = 10; // @tag(gorm:"foreignKey:UserId;references:UniqueId" json:"user" yaml:"user" fbtype:"one")

  optional string status = 11; // @tag(  yaml:"status"  )

  optional string email = 12; // @tag(  yaml:"email"  )

  optional string key = 13; // @tag(  yaml:"key"  )

  optional string expiresAt = 14; // @tag(  yaml:"expiresAt"  )

  int64 rank = 15; // @tag(gorm:"type:int;name:rank")
  int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 18; // @tag(sql:"-")
  string updatedFormatted = 19; // @tag(sql:"-")
}
















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service EmailProviders {
  rpc EmailProviderActionCreate (EmailProviderEntity) returns (EmailProviderCreateReply) {}
  rpc EmailProviderActionUpdate (EmailProviderEntity) returns (EmailProviderCreateReply) {}

  rpc EmailProviderActionQuery (QueryFilterRequest) returns (EmailProviderQueryReply) {}
  rpc EmailProviderActionGetOne (QueryFilterRequest) returns (EmailProviderReply) {}
  rpc EmailProviderActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message EmailProviderCreateReply {
	EmailProviderEntity data  = 1;
	IError error = 2;
}

message EmailProviderReply {
	EmailProviderEntity data = 1;
	IError error = 2;
}

message EmailProviderQueryReply {
	repeated EmailProviderEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message EmailProviderEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional EmailProviderEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string type = 9; // @tag(  yaml:"type"  )

  optional string apiKey = 10; // @tag(  yaml:"apiKey"  )

  int64 rank = 11; // @tag(gorm:"type:int;name:rank")
  int64 updated = 12; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 13; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 14; // @tag(sql:"-")
  string updatedFormatted = 15; // @tag(sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service EmailSenders {
  rpc EmailSenderActionCreate (EmailSenderEntity) returns (EmailSenderCreateReply) {}
  rpc EmailSenderActionUpdate (EmailSenderEntity) returns (EmailSenderCreateReply) {}

  rpc EmailSenderActionQuery (QueryFilterRequest) returns (EmailSenderQueryReply) {}
  rpc EmailSenderActionGetOne (QueryFilterRequest) returns (EmailSenderReply) {}
  rpc EmailSenderActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message EmailSenderCreateReply {
	EmailSenderEntity data  = 1;
	IError error = 2;
}

message EmailSenderReply {
	EmailSenderEntity data = 1;
	IError error = 2;
}

message EmailSenderQueryReply {
	repeated EmailSenderEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message EmailSenderEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional EmailSenderEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string fromName = 9; // @tag(  yaml:"fromName"  )

  optional string fromEmailAddress = 10; // @tag(  yaml:"fromEmailAddress"  )

  optional string replyTo = 11; // @tag(  yaml:"replyTo"  )

  optional string nickName = 12; // @tag(  yaml:"nickName"  )

  int64 rank = 13; // @tag(gorm:"type:int;name:rank")
  int64 updated = 14; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 15; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 16; // @tag(sql:"-")
  string updatedFormatted = 17; // @tag(sql:"-")
}















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/


message TestMailDto {
    // EmailSenderEntity senderId = 1;
    string senderId = 1;
    string toName = 2;
    string toEmail = 3;
    string subject = 4;
    string content = 54;
}



  

;
;
  

  

      
service ForgetPasswords {
  rpc ForgetPasswordActionCreate (ForgetPasswordEntity) returns (ForgetPasswordCreateReply) {}
  rpc ForgetPasswordActionUpdate (ForgetPasswordEntity) returns (ForgetPasswordCreateReply) {}

  rpc ForgetPasswordActionQuery (QueryFilterRequest) returns (ForgetPasswordQueryReply) {}
  rpc ForgetPasswordActionGetOne (QueryFilterRequest) returns (ForgetPasswordReply) {}
  rpc ForgetPasswordActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message ForgetPasswordCreateReply {
	ForgetPasswordEntity data  = 1;
	IError error = 2;
}

message ForgetPasswordReply {
	ForgetPasswordEntity data = 1;
	IError error = 2;
}

message ForgetPasswordQueryReply {
	repeated ForgetPasswordEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}









 
message ForgetPasswordEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional ForgetPasswordEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  UserEntity user = 10; // @tag(gorm:"foreignKey:UserId;references:UniqueId" json:"user" yaml:"user" fbtype:"one")

  /* One 2 one to external entity */
  optional string passportId  = 12; // @tag(yaml:"passportId" )
  PassportEntity passport = 13; // @tag(gorm:"foreignKey:PassportId;references:UniqueId" json:"passport" yaml:"passport" fbtype:"one")

  optional string status = 14; // @tag(  yaml:"status"  )

  int64 validUntil = 16;
  string validUntilFormatted = 17;

  int64 blockedUntil = 19;
  string blockedUntilFormatted = 20;

  optional int64 secondsToUnblock = 21; // @tag(  yaml:"secondsToUnblock"  )

  optional string otp = 22; // @tag(  yaml:"otp"  )

  optional string recoveryAbsoluteUrl = 23; // @tag(  yaml:"recoveryAbsoluteUrl"  )

  int64 rank = 24; // @tag(gorm:"type:int;name:rank")
  int64 updated = 25; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 26; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 27; // @tag(sql:"-")
  string updatedFormatted = 28; // @tag(sql:"-")
}



















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service GsmProviders {
  rpc GsmProviderActionCreate (GsmProviderEntity) returns (GsmProviderCreateReply) {}
  rpc GsmProviderActionUpdate (GsmProviderEntity) returns (GsmProviderCreateReply) {}

  rpc GsmProviderActionQuery (QueryFilterRequest) returns (GsmProviderQueryReply) {}
  rpc GsmProviderActionGetOne (QueryFilterRequest) returns (GsmProviderReply) {}
  rpc GsmProviderActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message GsmProviderCreateReply {
	GsmProviderEntity data  = 1;
	IError error = 2;
}

message GsmProviderReply {
	GsmProviderEntity data = 1;
	IError error = 2;
}

message GsmProviderQueryReply {
	repeated GsmProviderEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message GsmProviderEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional GsmProviderEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string apiKey = 9; // @tag(  yaml:"apiKey"  )

  optional string mainSenderNumber = 10; // @tag(  yaml:"mainSenderNumber"  )

  optional string type = 11; // @tag(  yaml:"type"  )

  optional string invokeUrl = 12; // @tag(  yaml:"invokeUrl"  )

  optional string invokeBody = 13; // @tag(  yaml:"invokeBody"  )

  int64 rank = 14; // @tag(gorm:"type:int;name:rank")
  int64 updated = 15; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 16; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 17; // @tag(sql:"-")
  string updatedFormatted = 18; // @tag(sql:"-")
}
















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
;
;
  

  

      
service NotificationConfigs {
  rpc NotificationConfigActionCreate (NotificationConfigEntity) returns (NotificationConfigCreateReply) {}
  rpc NotificationConfigActionUpdate (NotificationConfigEntity) returns (NotificationConfigCreateReply) {}

  rpc NotificationConfigActionQuery (QueryFilterRequest) returns (NotificationConfigQueryReply) {}
  rpc NotificationConfigActionGetOne (QueryFilterRequest) returns (NotificationConfigReply) {}
  rpc NotificationConfigActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message NotificationConfigCreateReply {
	NotificationConfigEntity data  = 1;
	IError error = 2;
}

message NotificationConfigReply {
	NotificationConfigEntity data = 1;
	IError error = 2;
}

message NotificationConfigQueryReply {
	repeated NotificationConfigEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}











 
message NotificationConfigEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional NotificationConfigEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional bool cascadeToSubWorkspaces = 9; // @tag(  yaml:"cascadeToSubWorkspaces")

  optional bool forcedCascadeEmailProvider = 10; // @tag(  yaml:"forcedCascadeEmailProvider")

  /* One 2 one to external entity */
  optional string generalEmailProviderId  = 12; // @tag(yaml:"generalEmailProviderId" )
  EmailProviderEntity generalEmailProvider = 13; // @tag(gorm:"foreignKey:GeneralEmailProviderId;references:UniqueId" json:"generalEmailProvider" yaml:"generalEmailProvider" fbtype:"one")

  /* One 2 one to external entity */
  optional string generalGsmProviderId  = 15; // @tag(yaml:"generalGsmProviderId" )
  GsmProviderEntity generalGsmProvider = 16; // @tag(gorm:"foreignKey:GeneralGsmProviderId;references:UniqueId" json:"generalGsmProvider" yaml:"generalGsmProvider" fbtype:"one")

  optional string inviteToWorkspaceContent = 17; // @tag(  yaml:"inviteToWorkspaceContent"  gorm:"text")

  optional string inviteToWorkspaceContentExcerpt = 18; // @tag(  yaml:"inviteToWorkspaceContentExcerpt"  gorm:"text")

  optional string inviteToWorkspaceContentDefault = 19; // @tag(  yaml:"inviteToWorkspaceContentDefault"  gorm:"text")

  optional string inviteToWorkspaceContentDefaultExcerpt = 20; // @tag(  yaml:"inviteToWorkspaceContentDefaultExcerpt"  gorm:"text")

  optional string inviteToWorkspaceTitle = 21; // @tag(  yaml:"inviteToWorkspaceTitle"  )

  optional string inviteToWorkspaceTitleDefault = 22; // @tag(  yaml:"inviteToWorkspaceTitleDefault"  )

  /* One 2 one to external entity */
  optional string inviteToWorkspaceSenderId  = 24; // @tag(yaml:"inviteToWorkspaceSenderId" )
  EmailSenderEntity inviteToWorkspaceSender = 25; // @tag(gorm:"foreignKey:InviteToWorkspaceSenderId;references:UniqueId" json:"inviteToWorkspaceSender" yaml:"inviteToWorkspaceSender" fbtype:"one")

  optional string forgetPasswordContent = 26; // @tag(  yaml:"forgetPasswordContent"  gorm:"text")

  optional string forgetPasswordContentExcerpt = 27; // @tag(  yaml:"forgetPasswordContentExcerpt"  gorm:"text")

  optional string forgetPasswordContentDefault = 28; // @tag(  yaml:"forgetPasswordContentDefault"  gorm:"text")

  optional string forgetPasswordContentDefaultExcerpt = 29; // @tag(  yaml:"forgetPasswordContentDefaultExcerpt"  gorm:"text")

  optional string forgetPasswordTitle = 30; // @tag(  yaml:"forgetPasswordTitle"  gorm:"text")

  optional string forgetPasswordTitleDefault = 31; // @tag(  yaml:"forgetPasswordTitleDefault"  gorm:"text")

  /* One 2 one to external entity */
  optional string forgetPasswordSenderId  = 33; // @tag(yaml:"forgetPasswordSenderId" )
  EmailSenderEntity forgetPasswordSender = 34; // @tag(gorm:"foreignKey:ForgetPasswordSenderId;references:UniqueId" json:"forgetPasswordSender" yaml:"forgetPasswordSender" fbtype:"one")

    optional string acceptLanguage = 35; // @tag(  yaml:"acceptLanguage" gorm:"text")
    optional string acceptLanguageExcerpt = 36; // @tag( yaml:"acceptLanguageExcerpt" gorm:"text")

  /* One 2 one to external entity */
  optional string confirmEmailSenderId  = 38; // @tag(yaml:"confirmEmailSenderId" )
  EmailSenderEntity confirmEmailSender = 39; // @tag(gorm:"foreignKey:ConfirmEmailSenderId;references:UniqueId" json:"confirmEmailSender" yaml:"confirmEmailSender" fbtype:"one")

  optional string confirmEmailContent = 40; // @tag(  yaml:"confirmEmailContent"  gorm:"text")

  optional string confirmEmailContentExcerpt = 41; // @tag(  yaml:"confirmEmailContentExcerpt"  gorm:"text")

  optional string confirmEmailContentDefault = 42; // @tag(  yaml:"confirmEmailContentDefault"  gorm:"text")

  optional string confirmEmailContentDefaultExcerpt = 43; // @tag(  yaml:"confirmEmailContentDefaultExcerpt"  gorm:"text")

  optional string confirmEmailTitle = 44; // @tag(  yaml:"confirmEmailTitle"  )

  optional string confirmEmailTitleDefault = 45; // @tag(  yaml:"confirmEmailTitleDefault"  )

  int64 rank = 46; // @tag(gorm:"type:int;name:rank")
  int64 updated = 47; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 48; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 49; // @tag(sql:"-")
  string updatedFormatted = 50; // @tag(sql:"-")
}





































/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      







;
;
;
;



message CreateByMailResponse {
    IError error = 1;
    UserSessionDto data = 2;
}

message EmailAccountSignupDto {
    string email = 1; // @tag(validate:"required") 
    string password = 2; // @tag(validate:"required")
    string firstName = 3; // @tag(validate:"required")
    string lastName = 4; // @tag(validate:"required")
    string inviteId = 5;
    string publicJoinKeyId = 6;
    string workspaceTypeId = 7;
}

message EmailAccountSigninDto {
    string email = 1; // @tag(validate:"required") 
    string password = 2; // @tag(validate:"required")
}

message PhoneNumberAccountCreationDto {
    string phoneNumber = 1; // @tag(validate:"required") 
}

message PhoneNumberUniversalAuthenticateDto {
    string phoneNumber = 1; // @tag(validate:"required") 
}

message UserSessionDto {
    PassportEntity passport = 1;
    string token = 2;
    string exchangeKey = 3;
    repeated UserRoleWorkspaceEntity userRoleWorkspaces = 4;// @tag(json:"userRoleWorkspaces")
    UserEntity user   = 5;
}

message OtpAuthenticateDto {
    string value = 1; // @tag(validate:"required")
	string otp = 2;
    string type = 3; // @tag(validate:"required")
    string password = 4;
}

message EmailOtpResponse {
    ForgetPasswordEntity request = 1;
	UserSessionDto userSession = 2;
}

message ResetEmailDto {
    string password = 1;
}





  

  

  

      
service Passports {
  rpc PassportActionCreate (PassportEntity) returns (PassportCreateReply) {}
  rpc PassportActionUpdate (PassportEntity) returns (PassportCreateReply) {}

  rpc PassportActionQuery (QueryFilterRequest) returns (PassportQueryReply) {}
  rpc PassportActionGetOne (QueryFilterRequest) returns (PassportReply) {}
  rpc PassportActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PassportCreateReply {
	PassportEntity data  = 1;
	IError error = 2;
}

message PassportReply {
	PassportEntity data = 1;
	IError error = 2;
}

message PassportQueryReply {
	repeated PassportEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message PassportEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PassportEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string type = 9; // @tag( validate:"required" yaml:"type"  )

  optional string value = 10; // @tag( validate:"required" yaml:"value"  )

  optional string password = 11; // @tag(  yaml:"password"  )

  optional bool confirmed = 12; // @tag(  yaml:"confirmed")

  optional string accessToken = 13; // @tag(  yaml:"accessToken"  )

  int64 rank = 14; // @tag(gorm:"type:int;name:rank")
  int64 updated = 15; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 16; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 17; // @tag(sql:"-")
  string updatedFormatted = 18; // @tag(sql:"-")
}
















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service PassportMethods {
  rpc PassportMethodActionCreate (PassportMethodEntity) returns (PassportMethodCreateReply) {}
  rpc PassportMethodActionUpdate (PassportMethodEntity) returns (PassportMethodCreateReply) {}

  rpc PassportMethodActionQuery (QueryFilterRequest) returns (PassportMethodQueryReply) {}
  rpc PassportMethodActionGetOne (QueryFilterRequest) returns (PassportMethodReply) {}
  rpc PassportMethodActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PassportMethodCreateReply {
	PassportMethodEntity data  = 1;
	IError error = 2;
}

message PassportMethodReply {
	PassportMethodEntity data = 1;
	IError error = 2;
}

message PassportMethodQueryReply {
	repeated PassportMethodEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message PassportMethodEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PassportMethodEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  repeated PassportMethodEntityPolyglot translations = 8; // @tag(gorm:"foreignKey:LinkerId;references:UniqueId" json:"translations")
  optional string name = 10; // @tag(translate:"true" validate:"required" yaml:"name"  )

  optional string type = 11; // @tag( validate:"required" yaml:"type"  )

  optional string region = 12; // @tag( validate:"required" yaml:"region"  )

  int64 rank = 13; // @tag(gorm:"type:int;name:rank")
  int64 updated = 14; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 15; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 16; // @tag(sql:"-")
  string updatedFormatted = 17; // @tag(sql:"-")
}

/* Because it has translation field, we need a translation table for this */
message PassportMethodEntityPolyglot {
  string linkerId = 1; // @tag(gorm:"uniqueId;not null;size:100;" json:"linkerId" yaml:"linkerId")
  string languageId = 2; // @tag(gorm:"uniqueId;not null;size:100;" json:"languageId" yaml:"languageId")

  string name = 3; // @tag(yaml:"name" json:"name");

}














/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
  

  

      
service PendingWorkspaceInvites {
  rpc PendingWorkspaceInviteActionCreate (PendingWorkspaceInviteEntity) returns (PendingWorkspaceInviteCreateReply) {}
  rpc PendingWorkspaceInviteActionUpdate (PendingWorkspaceInviteEntity) returns (PendingWorkspaceInviteCreateReply) {}

  rpc PendingWorkspaceInviteActionQuery (QueryFilterRequest) returns (PendingWorkspaceInviteQueryReply) {}
  rpc PendingWorkspaceInviteActionGetOne (QueryFilterRequest) returns (PendingWorkspaceInviteReply) {}
  rpc PendingWorkspaceInviteActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PendingWorkspaceInviteCreateReply {
	PendingWorkspaceInviteEntity data  = 1;
	IError error = 2;
}

message PendingWorkspaceInviteReply {
	PendingWorkspaceInviteEntity data = 1;
	IError error = 2;
}

message PendingWorkspaceInviteQueryReply {
	repeated PendingWorkspaceInviteEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message PendingWorkspaceInviteEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PendingWorkspaceInviteEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string value = 9; // @tag(  yaml:"value"  )

  optional string type = 10; // @tag(  yaml:"type"  )

  optional string coverLetter = 11; // @tag(  yaml:"coverLetter"  )

  optional string workspaceName = 12; // @tag(  yaml:"workspaceName"  )

  /* One 2 one to external entity */
  optional string roleId  = 14; // @tag(yaml:"roleId" )
  RoleEntity role = 15; // @tag(gorm:"foreignKey:RoleId;references:UniqueId" json:"role" yaml:"role" fbtype:"one")

  int64 rank = 16; // @tag(gorm:"type:int;name:rank")
  int64 updated = 17; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 18; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 19; // @tag(sql:"-")
  string updatedFormatted = 20; // @tag(sql:"-")
}
















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
  

  

      
service PhoneConfirmations {
  rpc PhoneConfirmationActionCreate (PhoneConfirmationEntity) returns (PhoneConfirmationCreateReply) {}
  rpc PhoneConfirmationActionUpdate (PhoneConfirmationEntity) returns (PhoneConfirmationCreateReply) {}

  rpc PhoneConfirmationActionQuery (QueryFilterRequest) returns (PhoneConfirmationQueryReply) {}
  rpc PhoneConfirmationActionGetOne (QueryFilterRequest) returns (PhoneConfirmationReply) {}
  rpc PhoneConfirmationActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PhoneConfirmationCreateReply {
	PhoneConfirmationEntity data  = 1;
	IError error = 2;
}

message PhoneConfirmationReply {
	PhoneConfirmationEntity data = 1;
	IError error = 2;
}

message PhoneConfirmationQueryReply {
	repeated PhoneConfirmationEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message PhoneConfirmationEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PhoneConfirmationEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  UserEntity user = 10; // @tag(gorm:"foreignKey:UserId;references:UniqueId" json:"user" yaml:"user" fbtype:"one")

  optional string status = 11; // @tag(  yaml:"status"  )

  optional string phoneNumber = 12; // @tag(  yaml:"phoneNumber"  )

  optional string key = 13; // @tag(  yaml:"key"  )

  optional string expiresAt = 14; // @tag(  yaml:"expiresAt"  )

  int64 rank = 15; // @tag(gorm:"type:int;name:rank")
  int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 18; // @tag(sql:"-")
  string updatedFormatted = 19; // @tag(sql:"-")
}
















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service Preferences {
  rpc PreferenceActionCreate (PreferenceEntity) returns (PreferenceCreateReply) {}
  rpc PreferenceActionUpdate (PreferenceEntity) returns (PreferenceCreateReply) {}

  rpc PreferenceActionQuery (QueryFilterRequest) returns (PreferenceQueryReply) {}
  rpc PreferenceActionGetOne (QueryFilterRequest) returns (PreferenceReply) {}
  rpc PreferenceActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PreferenceCreateReply {
	PreferenceEntity data  = 1;
	IError error = 2;
}

message PreferenceReply {
	PreferenceEntity data = 1;
	IError error = 2;
}

message PreferenceQueryReply {
	repeated PreferenceEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message PreferenceEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PreferenceEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string timezone = 9; // @tag(  yaml:"timezone"  )

  int64 rank = 10; // @tag(gorm:"type:int;name:rank")
  int64 updated = 11; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 12; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 13; // @tag(sql:"-")
  string updatedFormatted = 14; // @tag(sql:"-")
}












/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
;
  

  

      
service PublicJoinKeys {
  rpc PublicJoinKeyActionCreate (PublicJoinKeyEntity) returns (PublicJoinKeyCreateReply) {}
  rpc PublicJoinKeyActionUpdate (PublicJoinKeyEntity) returns (PublicJoinKeyCreateReply) {}

  rpc PublicJoinKeyActionQuery (QueryFilterRequest) returns (PublicJoinKeyQueryReply) {}
  rpc PublicJoinKeyActionGetOne (QueryFilterRequest) returns (PublicJoinKeyReply) {}
  rpc PublicJoinKeyActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message PublicJoinKeyCreateReply {
	PublicJoinKeyEntity data  = 1;
	IError error = 2;
}

message PublicJoinKeyReply {
	PublicJoinKeyEntity data = 1;
	IError error = 2;
}

message PublicJoinKeyQueryReply {
	repeated PublicJoinKeyEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}









 
message PublicJoinKeyEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional PublicJoinKeyEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  optional string roleId  = 10; // @tag(yaml:"roleId" )
  RoleEntity role = 11; // @tag(gorm:"foreignKey:RoleId;references:UniqueId" json:"role" yaml:"role" fbtype:"one")

  /* One 2 one to external entity */
  WorkspaceEntity workspace = 13; // @tag(gorm:"foreignKey:WorkspaceId;references:UniqueId" json:"workspace" yaml:"workspace" fbtype:"one")

  int64 rank = 14; // @tag(gorm:"type:int;name:rank")
  int64 updated = 15; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 16; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 17; // @tag(sql:"-")
  string updatedFormatted = 18; // @tag(sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
  

  

      
service Roles {
  rpc RoleActionCreate (RoleEntity) returns (RoleCreateReply) {}
  rpc RoleActionUpdate (RoleEntity) returns (RoleCreateReply) {}

  rpc RoleActionQuery (QueryFilterRequest) returns (RoleQueryReply) {}
  rpc RoleActionGetOne (QueryFilterRequest) returns (RoleReply) {}
  rpc RoleActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message RoleCreateReply {
	RoleEntity data  = 1;
	IError error = 2;
}

message RoleReply {
	RoleEntity data = 1;
	IError error = 2;
}

message RoleQueryReply {
	repeated RoleEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message RoleEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional RoleEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string name = 9; // @tag( validate:"required,omitempty,min=1,max=200" yaml:"name"  )

  /* Many 2 many entities */
  repeated string capabilitiesListId  = 11; // @tag(gorm:"-" sql:"-" yaml:"capabilitiesListId")
  repeated CapabilityEntity capabilities = 12; // @tag(gorm:"many2many:role_capabilities;foreignKey:UniqueId;references:UniqueId" yaml:"capabilities" fbtype:"many2many")

  int64 rank = 13; // @tag(gorm:"type:int;name:rank")
  int64 updated = 14; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 15; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 16; // @tag(sql:"-")
  string updatedFormatted = 17; // @tag(sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service TableViewSizings {
  rpc TableViewSizingActionCreate (TableViewSizingEntity) returns (TableViewSizingCreateReply) {}
  rpc TableViewSizingActionUpdate (TableViewSizingEntity) returns (TableViewSizingCreateReply) {}

  rpc TableViewSizingActionQuery (QueryFilterRequest) returns (TableViewSizingQueryReply) {}
  rpc TableViewSizingActionGetOne (QueryFilterRequest) returns (TableViewSizingReply) {}
  rpc TableViewSizingActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message TableViewSizingCreateReply {
	TableViewSizingEntity data  = 1;
	IError error = 2;
}

message TableViewSizingReply {
	TableViewSizingEntity data = 1;
	IError error = 2;
}

message TableViewSizingQueryReply {
	repeated TableViewSizingEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message TableViewSizingEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional TableViewSizingEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string tableName = 9; // @tag( validate:"required" yaml:"tableName"  )

  optional string sizes = 10; // @tag(  yaml:"sizes"  )

  int64 rank = 11; // @tag(gorm:"type:int;name:rank")
  int64 updated = 12; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 13; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 14; // @tag(sql:"-")
  string updatedFormatted = 15; // @tag(sql:"-")
}














/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
  

  

      
service Tokens {
  rpc TokenActionCreate (TokenEntity) returns (TokenCreateReply) {}
  rpc TokenActionUpdate (TokenEntity) returns (TokenCreateReply) {}

  rpc TokenActionQuery (QueryFilterRequest) returns (TokenQueryReply) {}
  rpc TokenActionGetOne (QueryFilterRequest) returns (TokenReply) {}
  rpc TokenActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message TokenCreateReply {
	TokenEntity data  = 1;
	IError error = 2;
}

message TokenReply {
	TokenEntity data = 1;
	IError error = 2;
}

message TokenQueryReply {
	repeated TokenEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message TokenEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional TokenEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  UserEntity user = 10; // @tag(gorm:"foreignKey:UserId;references:UniqueId" json:"user" yaml:"user" fbtype:"one")

  optional string validUntil = 11; // @tag(  yaml:"validUntil"  )

  int64 rank = 12; // @tag(gorm:"type:int;name:rank")
  int64 updated = 13; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 14; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 15; // @tag(sql:"-")
  string updatedFormatted = 16; // @tag(sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service Users {
  rpc UserActionCreate (UserEntity) returns (UserCreateReply) {}
  rpc UserActionUpdate (UserEntity) returns (UserCreateReply) {}

  rpc UserActionQuery (QueryFilterRequest) returns (UserQueryReply) {}
  rpc UserActionGetOne (QueryFilterRequest) returns (UserReply) {}
  rpc UserActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message UserCreateReply {
	UserEntity data  = 1;
	IError error = 2;
}

message UserReply {
	UserEntity data = 1;
	IError error = 2;
}

message UserQueryReply {
	repeated UserEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message UserEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional UserEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string firstName = 9; // @tag(  yaml:"firstName"  )

  optional string lastName = 10; // @tag(  yaml:"lastName"  )

  optional string photo = 11; // @tag(  yaml:"photo"  )

  int64 rank = 12; // @tag(gorm:"type:int;name:rank")
  int64 updated = 13; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 14; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 15; // @tag(sql:"-")
  string updatedFormatted = 16; // @tag(sql:"-")
}














/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

  

  

      
service UserProfiles {
  rpc UserProfileActionCreate (UserProfileEntity) returns (UserProfileCreateReply) {}
  rpc UserProfileActionUpdate (UserProfileEntity) returns (UserProfileCreateReply) {}

  rpc UserProfileActionQuery (QueryFilterRequest) returns (UserProfileQueryReply) {}
  rpc UserProfileActionGetOne (QueryFilterRequest) returns (UserProfileReply) {}
  rpc UserProfileActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message UserProfileCreateReply {
	UserProfileEntity data  = 1;
	IError error = 2;
}

message UserProfileReply {
	UserProfileEntity data = 1;
	IError error = 2;
}

message UserProfileQueryReply {
	repeated UserProfileEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message UserProfileEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional UserProfileEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string firstName = 9; // @tag(  yaml:"firstName"  )

  optional string lastName = 10; // @tag(  yaml:"lastName"  )

  int64 rank = 11; // @tag(gorm:"type:int;name:rank")
  int64 updated = 12; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 13; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 14; // @tag(sql:"-")
  string updatedFormatted = 15; // @tag(sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
;
;
  

  

      
service UserRoleWorkspaces {
  rpc UserRoleWorkspaceActionCreate (UserRoleWorkspaceEntity) returns (UserRoleWorkspaceCreateReply) {}
  rpc UserRoleWorkspaceActionUpdate (UserRoleWorkspaceEntity) returns (UserRoleWorkspaceCreateReply) {}

  rpc UserRoleWorkspaceActionQuery (QueryFilterRequest) returns (UserRoleWorkspaceQueryReply) {}
  rpc UserRoleWorkspaceActionGetOne (QueryFilterRequest) returns (UserRoleWorkspaceReply) {}
  rpc UserRoleWorkspaceActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message UserRoleWorkspaceCreateReply {
	UserRoleWorkspaceEntity data  = 1;
	IError error = 2;
}

message UserRoleWorkspaceReply {
	UserRoleWorkspaceEntity data = 1;
	IError error = 2;
}

message UserRoleWorkspaceQueryReply {
	repeated UserRoleWorkspaceEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}











 
message UserRoleWorkspaceEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional UserRoleWorkspaceEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  /* One 2 one to external entity */
  UserEntity user = 10; // @tag(gorm:"foreignKey:UserId;references:UniqueId" json:"user" yaml:"user" fbtype:"one")

  /* One 2 one to external entity */
  optional string roleId  = 12; // @tag(yaml:"roleId" )
  RoleEntity role = 13; // @tag(gorm:"foreignKey:RoleId;references:UniqueId" json:"role" yaml:"role" fbtype:"one")

  /* One 2 one to external entity */
  WorkspaceEntity workspace = 15; // @tag(gorm:"foreignKey:WorkspaceId;references:UniqueId" json:"workspace" yaml:"workspace" fbtype:"one")

  int64 rank = 16; // @tag(gorm:"type:int;name:rank")
  int64 updated = 17; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 18; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 19; // @tag(sql:"-")
  string updatedFormatted = 20; // @tag(sql:"-")
}














/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




;
;




message AcceptInviteDto {
	string inviteUniqueId = 1;
	optional string visibility = 2; // @tag(yaml:"visibility")
	int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
  	int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
}

message AssignRoleDto {
	string roleId = 1; // @tag(validate:"required")
	string userId = 2; // @tag(validate:"required")
	optional string visibility = 3; // @tag(yaml:"visibility")
	int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
	int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
}

message WorkspaceDto {
	repeated UserRoleWorkspaceEntity relations = 1;
	optional string visibility = 2; // @tag(yaml:"visibility")
	int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
	int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
}

message ExchangeKeyInformationDto {
	string key = 1;
	optional string visibility = 2; // @tag(yaml:"visibility")
}

message UserAccessLevel {
	repeated string capabilities  = 1; // @tag(json:"capabilities")
	repeated string workspaces    = 2; // @tag(json:"workspaces")
	string SQL = 3;   // @tag(json:"sql")
}

message AuthResult {
	string workspaceId  = 1;           // @tag(json:"workspaceId")
	string internalSql      = 2;      // @tag(json:"internalSql")
	string userId              = 3;   // @tag(json:"userId")
	UserEntity user         = 4;       // @tag(json:"user")
	optional UserAccessLevel accessLevel = 5; // @tag(json:"accessLevel")
	repeated string userHas  = 6;           // @tag(json:"userHas")
 
}

message AuthContext {
	bool skipWorkspaceId = 4;
	string workspaceId   = 1;
	string token          = 2;
	repeated string capabilities = 3;
}


 
message ReactiveSearchResultDto {
	optional ReactiveSearchResultDto parent = 5; // @tag(yaml:"parent")
	string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
	optional string phrase = 9; // @tag(  yaml:"phrase"  )
	optional string icon = 10; // @tag(  yaml:"icon"  )
	optional string description = 11; // @tag(  yaml:"description"  )
	optional string group = 12; // @tag(  yaml:"group"  )
	optional string uiLocation = 13; // @tag(  yaml:"uiLocation"  )
	optional string actionFn = 14; // @tag(  yaml:"actionFn"  )
}
  



  

  

  

      
service WorkspaceConfigs {
  rpc WorkspaceConfigActionCreate (WorkspaceConfigEntity) returns (WorkspaceConfigCreateReply) {}
  rpc WorkspaceConfigActionUpdate (WorkspaceConfigEntity) returns (WorkspaceConfigCreateReply) {}

  rpc WorkspaceConfigActionQuery (QueryFilterRequest) returns (WorkspaceConfigQueryReply) {}
  rpc WorkspaceConfigActionGetOne (QueryFilterRequest) returns (WorkspaceConfigReply) {}
  rpc WorkspaceConfigActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message WorkspaceConfigCreateReply {
	WorkspaceConfigEntity data  = 1;
	IError error = 2;
}

message WorkspaceConfigReply {
	WorkspaceConfigEntity data = 1;
	IError error = 2;
}

message WorkspaceConfigQueryReply {
	repeated WorkspaceConfigEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}





 
message WorkspaceConfigEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional WorkspaceConfigEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional int64 disablePublicWorkspaceCreation = 9; // @tag(  yaml:"disablePublicWorkspaceCreation"  )

  int64 rank = 10; // @tag(gorm:"type:int;name:rank")
  int64 updated = 11; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 12; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 13; // @tag(sql:"-")
  string updatedFormatted = 14; // @tag(sql:"-")
}











;
/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      

message WorkspaceConfigDto {
	WorkspaceEntity workspace = 2; // @tag(gorm:"foreignKey:WorkspaceId;references:UniqueId")
	optional string workspaceId = 3;  // @tag(gorm:"size:100;")

	optional string zoomClientId = 4;
	optional string zoomClientSecret = 5;
	
	optional bool allowPublicToJoinTheWorkspace = 6;
	optional string visibility = 7; // @tag(yaml:"visibility")
	int64 updated = 16; // @tag(gorm:"autoUpdateTime:nano")
	int64 created = 17; // @tag(gorm:"autoUpdateTime:nano")
}



  

;
  

  

      
service Workspaces {
  rpc WorkspaceActionCreate (WorkspaceEntity) returns (WorkspaceCreateReply) {}
  rpc WorkspaceActionUpdate (WorkspaceEntity) returns (WorkspaceCreateReply) {}

  rpc WorkspaceActionQuery (QueryFilterRequest) returns (WorkspaceQueryReply) {}
  rpc WorkspaceActionGetOne (QueryFilterRequest) returns (WorkspaceReply) {}
  rpc WorkspaceActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message WorkspaceCreateReply {
	WorkspaceEntity data  = 1;
	IError error = 2;
}

message WorkspaceReply {
	WorkspaceEntity data = 1;
	IError error = 2;
}

message WorkspaceQueryReply {
	repeated WorkspaceEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message WorkspaceEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional WorkspaceEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string description = 9; // @tag(  yaml:"description"  )

  optional string name = 10; // @tag(  yaml:"name"  )

  int64 rank = 11; // @tag(gorm:"type:int;name:rank")
  int64 updated = 12; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 13; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 14; // @tag(sql:"-")
  string updatedFormatted = 15; // @tag(sql:"-")
  repeated WorkspaceEntity children = 16; // @tag(gorm:"-" sql:"-")
}













/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
;
  

  

      
service WorkspaceInvites {
  rpc WorkspaceInviteActionCreate (WorkspaceInviteEntity) returns (WorkspaceInviteCreateReply) {}
  rpc WorkspaceInviteActionUpdate (WorkspaceInviteEntity) returns (WorkspaceInviteCreateReply) {}

  rpc WorkspaceInviteActionQuery (QueryFilterRequest) returns (WorkspaceInviteQueryReply) {}
  rpc WorkspaceInviteActionGetOne (QueryFilterRequest) returns (WorkspaceInviteReply) {}
  rpc WorkspaceInviteActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message WorkspaceInviteCreateReply {
	WorkspaceInviteEntity data  = 1;
	IError error = 2;
}

message WorkspaceInviteReply {
	WorkspaceInviteEntity data = 1;
	IError error = 2;
}

message WorkspaceInviteQueryReply {
	repeated WorkspaceInviteEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}









 
message WorkspaceInviteEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional WorkspaceInviteEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  optional string passportMode = 9; // @tag(  yaml:"passportMode"  )

  optional string coverLetter = 10; // @tag(  yaml:"coverLetter"  )

  optional string targetUserLocale = 11; // @tag(  yaml:"targetUserLocale"  )

  optional string email = 12; // @tag(  yaml:"email"  )

  /* One 2 one to external entity */
  WorkspaceEntity workspace = 14; // @tag(gorm:"foreignKey:WorkspaceId;references:UniqueId" json:"workspace" yaml:"workspace" fbtype:"one")

  optional string firstName = 15; // @tag(  yaml:"firstName"  )

  optional string lastName = 16; // @tag(  yaml:"lastName"  )

  optional string inviteeUserId = 17; // @tag(  yaml:"inviteeUserId"  )

  optional string phoneNumber = 18; // @tag(  yaml:"phoneNumber"  )


  /* One 2 one to external entity */
  optional string roleId  = 21; // @tag(yaml:"roleId" )
  RoleEntity role = 22; // @tag(gorm:"foreignKey:RoleId;references:UniqueId" json:"role" yaml:"role" fbtype:"one")

  int64 rank = 23; // @tag(gorm:"type:int;name:rank")
  int64 updated = 24; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 25; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 26; // @tag(sql:"-")
  string updatedFormatted = 27; // @tag(sql:"-")
}






















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      




  

;
  

  

      
service WorkspaceTypes {
  rpc WorkspaceTypeActionCreate (WorkspaceTypeEntity) returns (WorkspaceTypeCreateReply) {}
  rpc WorkspaceTypeActionUpdate (WorkspaceTypeEntity) returns (WorkspaceTypeCreateReply) {}

  rpc WorkspaceTypeActionQuery (QueryFilterRequest) returns (WorkspaceTypeQueryReply) {}
  rpc WorkspaceTypeActionGetOne (QueryFilterRequest) returns (WorkspaceTypeReply) {}
  rpc WorkspaceTypeActionRemove (QueryFilterRequest) returns (RemoveReply) {}
}

message WorkspaceTypeCreateReply {
	WorkspaceTypeEntity data  = 1;
	IError error = 2;
}

message WorkspaceTypeReply {
	WorkspaceTypeEntity data = 1;
	IError error = 2;
}

message WorkspaceTypeQueryReply {
	repeated WorkspaceTypeEntity items = 1;
	int64 totalItems = 2;
	int64 itemsPerPage = 3;
	int64 startIndex = 4;
	IError error = 5;
}







 
message WorkspaceTypeEntity {
  optional string visibility = 1; // @tag(yaml:"visibility")
  optional string workspaceId = 2; // @tag(yaml:"workspaceId")
  optional string linkerId = 3; // @tag(yaml:"linkerId")
  optional string parentId = 4; // @tag(yaml:"parentId")
  optional WorkspaceTypeEntity parent = 5; // @tag(yaml:"parent")
  string uniqueId = 6; // @tag(gorm:"primarykey;uniqueId;unique;not null;size:100;" yaml:"uniqueId")
  optional string userId = 7; // @tag(yaml:"userId")
  repeated WorkspaceTypeEntityPolyglot translations = 8; // @tag(gorm:"foreignKey:LinkerId;references:UniqueId" json:"translations")
  optional string title = 10; // @tag(translate:"true" validate:"required,omitempty,min=1,max=250" yaml:"title"  )

  optional string description = 11; // @tag(translate:"true"  yaml:"description"  )

  optional string slug = 12; // @tag( validate:"required,omitempty,min=2,max=50" yaml:"slug"  gorm:"unique;not null;size:100;")

  /* One 2 one to external entity */
  optional string roleId  = 14; // @tag(yaml:"roleId" validate:"required")
  RoleEntity role = 15; // @tag(gorm:"foreignKey:RoleId;references:UniqueId" json:"role" yaml:"role" fbtype:"one")

  int64 rank = 16; // @tag(gorm:"type:int;name:rank")
  int64 updated = 17; // @tag(gorm:"autoUpdateTime:nano")
  int64 created = 18; // @tag(gorm:"autoUpdateTime:nano")
  string createdFormatted = 19; // @tag(sql:"-")
  string updatedFormatted = 20; // @tag(sql:"-")
}

/* Because it has translation field, we need a translation table for this */
message WorkspaceTypeEntityPolyglot {
  string linkerId = 1; // @tag(gorm:"uniqueId;not null;size:100;" json:"linkerId" yaml:"linkerId")
  string languageId = 2; // @tag(gorm:"uniqueId;not null;size:100;" json:"languageId" yaml:"languageId")

  string title = 3; // @tag(yaml:"title" json:"title");

  string description = 4; // @tag(yaml:"description" json:"description");

}















/**
* Add your custom services, and messages here.
* It can be your dto for example. 
* - Use Module.yml for entities, otherwise it won't be managed
* - Don't use this file for entities might be queried by web
**/
      


