/*
*	Generated by fireback 1.2.0
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
*/
    import {
        BaseDto,
        BaseEntity,
    } from "../../core/definitions"
// In this section we have sub entities related to this object
// Class body
export type UserEntityKeys =
  keyof typeof UserEntity.Fields;
export class UserEntity extends BaseEntity {
  public children?: UserEntity[] | null;
  public firstName?: string | null;
  public lastName?: string | null;
  public photo?: string | null;
  public gender?: number | null;
  public title?: string | null;
  public birthDate?: Date | null;
  public avatar?: string | null;
  public static Navigation = {
      edit(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : '..'}/user/edit/${uniqueId}`;
      },
      create(locale?: string) {
          return `${locale ? '/' + locale : '..'}/user/new`;
      },
      single(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : '..'}/user/${uniqueId}`;
      },
      query(params: any = {}, locale?: string) {
          return `${locale ? '/' + locale : '..'}/users`;
      },
      /**
      * Use R series while building router in CRA or nextjs, or react navigation for react Native
      * Might be useful in Angular as well.
      **/
      Redit: "user/edit/:uniqueId",
      Rcreate: "user/new",
      Rsingle: "user/:uniqueId",
      Rquery: "users",
  };
  public static definition = {
  "rpc": {
    "query": {
      "qs": [
        {
          "name": "withImages",
          "type": "bool?",
          "gormMap": {}
        }
      ]
    }
  },
  "permRewrite": {
    "replace": "root.modules",
    "with": "root.manage"
  },
  "name": "user",
  "features": {},
  "security": {
    "writeOnRoot": true
  },
  "gormMap": {},
  "fields": [
    {
      "name": "firstName",
      "type": "string",
      "validate": "required",
      "computedType": "string",
      "gormMap": {}
    },
    {
      "name": "lastName",
      "type": "string",
      "validate": "required",
      "computedType": "string",
      "gormMap": {}
    },
    {
      "name": "photo",
      "type": "string",
      "computedType": "string",
      "gormMap": {}
    },
    {
      "name": "gender",
      "type": "int?",
      "computedType": "number",
      "gormMap": {}
    },
    {
      "name": "title",
      "type": "string",
      "computedType": "string",
      "gormMap": {}
    },
    {
      "name": "birthDate",
      "type": "date",
      "computedType": "Date",
      "gormMap": {}
    },
    {
      "name": "avatar",
      "type": "string",
      "computedType": "string",
      "gormMap": {}
    }
  ],
  "description": "Manage the users who are in the current app (root only)"
}
public static Fields = {
  ...BaseEntity.Fields,
      firstName: `firstName`,
      lastName: `lastName`,
      photo: `photo`,
      gender: `gender`,
      title: `title`,
      birthDate: `birthDate`,
      avatar: `avatar`,
}
}
