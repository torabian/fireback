name: payment

# Define the module entities here:

entities:
  # This is a sample entity. You can delete it and write your own
  - name: paymentConfig
    security:
      readOnRoot: true
      writeOnRoot: true
      resolveStrategy: workspace
    distinctBy: workspace
    permRewrite:
      replace: root.modules
      with: root.manage
    description: Contains the api keys, configuration, urls, callbacks for different payment gateways.
    fields:
      - name: enableStripe
        type: bool?
        description: 
          Enables the stripe payment integration in the project
      - name: stripeSecretKey
        type: string
        description: Stripe secret key to initiate a payment intent
      - name: stripeCallbackUrl
        type: string
        description: The endpoint which the payment module will handle response coming back from stripe.


  - name: invoice
    security:
      readOnRoot: true
      writeOnRoot: true
    permRewrite:
      replace: root.modules
      with: root.manage
    description: 
      Invoice is a billable value, which a party recieves, and needs to pay it by different means.
      Invoice keeps information such as reason, total amount, tax amount and other details.
      An invoice can be payed via different payment methods.
    fields:
    - name: title
      type: text
      validate: required
      description: Explanation about the invoice, the reason someone needs to pay
    - name: amount
      type: money?
      validate: required
      description: Amount of the invoice which has to be payed
    - name: notificationKey
      type: string
      description: 
        The unique key, when an event related to the invoice happened it would be triggered.
        For example if another module wants to initiate the payment, and after payment success,
        wants to run some code, it would be listening to invoice events and notificationKey will come.
    - name: redirectAfterSuccess
      type: string
      description: 
        When the payment is successful, it might use this url to make a redirect.
    - name: finalStatus
      type: enum
      description: Final status of the invoice from a accounting perspective
      validate: required
      of:
        - k: payed
          description: Payed
        - k: pending
          description: Pending
  - name: invoiceTransaction
    description: Transactions history occured for an specific invoice
    permRewrite:
      replace: root.modules
      with: root.manage
    fields:
      - name: invoice
        type: one
        validate: required
        target: InvoiceEntity
        description: 
          The original invoice which this transaction would settle
      - name: amount
        type: int64
        description: the original amount that this transaction is resolving based on the invoice
      - name: provider
        type: string
        description: The payment provider, such as 'stripe', or 'przelewy24'
      - name: externalSessionId
        type: string
        description: External session id generated by the payment provider
      - name: externalPaymentId
        type: string
        description: External payment id generated by the payment provider
      - name: failureReason
        type: string
        description: The reason why the transaction is failed
      - name: paidAt
        type: datetime
        description: The time that payment successfully gone through.

 
  - name: paymentParameter
    cliName: param
    distinctBy: workspace
    permRewrite:
      replace: root.modules
      with: root.manage
    description:
      Keeps the information about payment Przelewy24 payment provider
    security:
      writeOnRoot: true
    fields:
    - name: posId
      type: string
      description:
        User it's the same value as posId
    - name: merchantId
      type: string
      description:
        Merchant Id is said to be same as posId, but we collect it anyway
    - name: crc
      type: string
      description:
        CRC is got from the payment provider
    - name: secretId
      type: string
      description:
        secretId it's the samevalue as key for reports (API key).
    - name: urlReturn
      type: string
      description:
        Used when transaction is done on payment provider side
    - name: urlStatus
      type: string
      description:
        Used to send notification from payment provider.
    - name: currency
      type: string
      description:
        The currency that transactions will be. 
    - name: country
      type: string
      description:
        Country codes compatible with ISO, e.g. PL, DE, etc.
      default: PL
    - name: paymentPageUrl
      type: string
      description:
        The location that transaction would go when it's already registered.
        You can use {Token} placeholder and it would be replaced.
      default: https://secure.przelewy24.pl/trnRequest/{TOKEN}
    - name: registerApiUrl
      type: string
      description:
        Url that would be used to register a transaction
      default: https://sandbox.przelewy24.pl/api/v1/transaction/register
    - name: verifyApiUrl
      type: string
      description:
        The url which will be used to verify the transaction notification
      default: https://sandbox.przelewy24.pl/api/v1/transaction/verify

actions:

  - name: notification
    description: 
      A signal sent by P24 to give the order id into the system
    cliName: notify
    in:
      fields:
        - name: sessionId
          type: string
          description: 
            The session which has been assigned during payment process initially.
        - name: orderId
          type: int64

  - name: verifyTransaction
    description:
      Calls a external api to verify a transaction has been done correctly
    cliName: verify
    in:
      fields:
      - name: sessionId
        type: string
        description: 
          The session which has been assigned during payment process initially.
      - name: amount
        description:
          The amount of transaction which will be payed. It's an integer, make sure you multiply
          the value by 100 instead of sending a float.
        type: int64
      - name: orderId
        description:
          The orderId which has been assigned by P24 and sent via notification
        type: int64

  - name: payInvoice
    url: /payment/invoice/:uniqueId
    description: 
      Pay an invoice created independently
    method: get

    qs:
    - name: invoiceId
      type: string
      validate: required
      description: 
        Created invoice to be payed via strip

  - name: registerTransaction
    description: Initiates a transaction with przelewy24
    cliName: register
    in:
      fields:
      - name: email
        description: Customer email address
        type: string
      - name: description
        description: Describe the reason for the transaction
        type: string
      - name: amount
        description:
          The amount of transaction which will be payed. It's an integer, make sure you multiply
          the value by 100 instead of sending a float.
        type: int64

  - name: checkProductInventory
    description:
      It would use the remote api for inventory to check if a product is available
      and sends it back to the front-end

remotes:
  - url: https://api.gamestorm-shop.dev3.muchmore.pl/external-api/products/1
    method: get
    name: productInventoryAvailability
    out:
      fields:
      - name: name
        type: string
      - name: platforms
        type: arrayP
        primitive: string

  - url: https://sandbox.przelewy24.pl/api/v1/transaction/verify
    method: put
    name: verifyTransaction
    in:
      fields:
      - name: posId
        type: int64
      - name: merchantId
        type: int64
      - name: amount
        type: int64
      - name: orderId
        type: int64
      - name: sessionId
        type: string
      - name: currency
        type: string
      - name: sign
        type: string

    out:
      fields:
        - name: data
          type: object
          fields:
          - name: token
            type: string

        - name: error
          type: string
  - url: https://sandbox.przelewy24.pl/api/v1/transaction/register
    method: post
    name: registerTransaction
    in:
      fields:
      - name: merchantId
        type: int64
      - name: posId
        type: int64
      - name: amount
        type: int64
        validate: required
      - name: sessionId
        type: string
      - name: country
        type: string
      - name: currency
        type: string
      - name: description
        type: string
      - name: email
        type: string
      - name: urlReturn
        type: string
      - name: urlStatus
        type: string
      - name: sign
        type: string

    out:
      fields:
        - name: data
          type: object
          fields:
          - name: token
            type: string

        - name: error
          type: string
    
        
messages:
  paymentProviderFullyMissing:
    en: 
      Payment Parameters and configuration is fully missing, you need to create a configuration
      under root
  paymentProviderMissingConfiguration:
    en: You need to configurate the payment provider parameters, some are missing.
  paymentProviderMissingCrc:
    en: CRC is missing
  paymentProviderMissingPosId:
    en: Pos Id is missing
  paymentProviderMissingMerchantId:
    en: Merchant Id is missing
  paymentProviderMissingSecretId:
    en: Secret Id is missing
  paymentProviderMissingUrlReturn:
    en: Url Return is missing
  paymentProviderMissingUrlStatus:
    en: Url Status is missing, P24 won't be able to signal
  transactionNotFound:
    en: Transaction not found.
  paymentProviderIsNotAvailable:
    en: Payment providers are not available yet. This system doesn't accept any kind of payments at this moment