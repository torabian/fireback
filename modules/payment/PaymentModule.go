package payment

/*
*	Generated by fireback <no value>
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
 */

import (
	"embed"

	"github.com/torabian/fireback/modules/fireback"
	"github.com/urfave/cli"
)

//go:embed *Module3.yml
var Module2Definitions embed.FS

type PaymentModuleConfig struct {
	// Add whatever you need to pass to this module for setup.
	// This is used only if you want to customize behavior of module,
	// do not use for passing environment variables, there is another mechanism for it

	OnInvoiceStatusChange func(*InvoiceEntity)
}

// hack, because get methods do not support cli now, I need to manually add some parameters
// if fireback is fixed, this is not needed.
func getPaymentActionsBundleOverride() *fireback.ModuleActionsBundle {

	var commands cli.Commands
	for _, command := range PaymentCliActionsBundle.Subcommands {
		if command.Name != "pay-invoice" {
			commands = append(commands, command)
		}
	}

	commands = append(cli.Commands{
		{
			Name: "pay-invoice",
			Flags: []cli.Flag{
				cli.StringFlag{
					Name:  "invoice-id",
					Usage: "Invoice string id",
				},
			},
			Usage: `Pay an invoice created independently`,
			Action: func(c *cli.Context) {
				query := fireback.CommonCliQueryDSLBuilderAuthorize(c, PayInvoiceSecurityModel)
				result, err := PayInvoiceActionFn(query)
				fireback.HandleActionInCli(c, result, err, map[string]map[string]string{})
			},
		},
	}, commands...)

	return &fireback.ModuleActionsBundle{
		Actions: PaymentCustomActions(),
		CliAction: &fireback.CliActionsBundle{
			Name:  "payment",
			Usage: ``,
			// Here we will include entities actions, as well as module level actions
			Subcommands: commands,
		},
	}
}

func PaymentModuleSetup(cfg *PaymentModuleConfig) *fireback.ModuleProvider {
	if cfg != nil {
		OnInvoiceStatusChange = cfg.OnInvoiceStatusChange
	}

	module := &fireback.ModuleProvider{
		Name:          "payment",
		Definitions:   &Module2Definitions,
		ActionsBundle: getPaymentActionsBundleOverride(),
		EntityBundles: []fireback.EntityBundle{
			PaymentParameterEntityBundle,
			InvoiceTransactionEntityBundle,
			PaymentConfigEntityBundle,
			InvoiceEntityBundle,
			// Insert the NameEntityBundle here.
			// each entity, has multiple features, such as permissions, events, translations
			// *EntityBundle objects are a list of them which are auto generated,
			// and by adding them here it will be automatically added.
			// we cannot add them automatically upon saving yaml for you,
			// when you add a new entity in yaml, add it manually here.
		},
	}

	return module
}
