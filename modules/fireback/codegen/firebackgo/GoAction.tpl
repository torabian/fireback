package {{ .m.Name }}

/*
*	Generated by fireback {{ .fv }}
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
*/

import (

    {{ if .m.Actions}}
	"github.com/gin-gonic/gin"
    {{ end }}

    {{ range .m.ActionsCustomImport }}
    "{{ .}}"
    {{ end }}
    "github.com/urfave/cli"
    {{ if ne .wsprefix "" }}
	"github.com/torabian/fireback/modules/fireback"
    {{ end }}
)

import (
	"reflect"
  
)

{{ template "actions-section" (arr .m.Actions $.wsprefix $.m.PublicName .remoteQueryChildren .childrenIn .childrenOut )}}

var {{ .m.Upper }}CustomActionsCli = []cli.Command {
{{ range .m.Actions }}
    {{ .Upper }}ActionCmd,
{{ end }}
}

// Only to include some headers
func {{ upper .m.Name }}JsonInclude()  {
    str4 := reflect.ValueOf(nil)
    _ = str4

}

// Use the actions bundle for ease and provide it to the ModuleProvider
// and it would gather all actions in the module level
var {{ .m.Upper }}CliActionsBundle = &{{ $.wsprefix }}CliActionsBundle{
    Name: "{{ .m.Name }}",
    Usage: `{{ .m.Description }}`,

    // Here we will include entities actions, as well as module level actions
    Subcommands: cli.Commands{
        {{ range .m.Actions }}
            {{ .Upper }}ActionCmd,
        {{ end }}
        {{ range .m.Entities }}
        {{ .Upper }}CliFn(),
        {{ end }}
    },
}


func Get{{ .m.Upper }}ActionsBundle() *{{ $.wsprefix }}ModuleActionsBundle {
    return &{{ $.wsprefix }}ModuleActionsBundle{
        Actions: {{ .m.Upper }}CustomActions(),
        CliAction: {{ .m.Upper }}CliActionsBundle,
    }
}


func Get{{ .m.Upper }}ActionsCli() []cli.Command {
	return {{ .m.Upper }}CustomActionsCli
}

