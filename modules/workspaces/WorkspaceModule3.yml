name: workspaces
meta-workspace: true
config:
  - name: withTaskServer
    description: 
      Runs the tasks server asyncq library when the http server starts. Useful for all in one applications to run
      everything in single instance
    type: bool
    default: false
  - name: name
    description: >-
      Environment name, such as dev, prod, test, test-eu, etc...
  - name: dbName
    default: ':memory:'
    description: >-
      Database name for vendors which provide database names, such as mysql.
      Filename on disk for sqlite.
  - name: certFile
    description: SSL Certification location to server on http listener
  - name: keyFile
    description: SSL Certification key file
  - name: dbLogLevel
    description: Database log level for SQL queries, used by GORM orm. Default it's silent. 'warn', 'error', 'info' are other options.
    default: silent
  - name: useSSL
    description: If set to true, all http traffic will be redirected into https. Needs certFile and keyFile to be defined otherwise no effect
    type: bool
  - name: dbPort
    description: 'Database port for those which are having a port, 3306 on mysql for example'
    type: int64
  - name: driveEnabled
    type: bool
    description: >-
      Drive is a mechanism to have file upload and download, inlining integrated
      into the fireback
    default: true
  - name: dbDsn
    description: >-
      Connection dsn to database. Some databases allow connection using a string
      with all credentials and configs. This has hight priority, if set other
      details will be ignored.
  - name: dbHost
    description: 'Database host, such as localhost, or 127.0.0.1'
  - name: dbUsername
    description: 'Database username for connection, such as root.'
  - name: dbPassword
    description: Database password for connection. "Can be" empty if there is no password
  - name: ginMode
    description: 'Gin framework mode, which could be ''test'', ''debug'', ''release'''
  - name: storage
    description: This is the storage url which files will be uploaded to
  - name: dbVendor
    default: sqlite
    description: >-
      Database vendor name, such as sqlite, mysql, or any other supported
      database.
  - name: stdOut
    description: Writes the logs instead of std out into these log files.
  - name: workerAddress
    description: >-
      This is the url (host and port) of a queue service. If not set, we use the
      internal queue system
    default: '127.0.0.1:6379'
  - name: workerConcurrency
    description: How many tasks worker can take concurrently
    default: 10
    type: int
  - name: stdErr
    description: Writes the errors instead of std err into these log files.
  - name: tusPort
    description: Resumable file upload server port.
  - name: cliToken
    description: 'Authorization token for cli apps, to access resoruces similar on http api'
  - name: cliRegion
    description: 'Region, for example us or pl'
    default: us
  - name: cliLanguage
    description: 'Language of the cli operations, for example en or pl'
    default: en
  - name: cliWorkspace
    description: Selected workspace in the cli context.
  - name: port
    description: The port which application would be lifted
    default: 4500
    type: int64
  - name: host
    default: localhost
    description: Application host which http server will be lifted
  - name: macIdentifier
    default: fireback
    description: Used name for installing app as system service on macos installers
  - name: debianIdentifier
    description: Used name for installing app as system service on ubuntu installers
    default: fireback
  - name: windowsIdentifier
    description: Used name for installing app as system service on windows installers
    default: fireback
actions:
  - name: queryWorkspaceTypesPublicly
    format: query
    cliName: workspace-types
    description: 
      Returns the workspaces types available in the project publicly without authentication,
      and the value could be used upon signup to go different route.
    out:
      entity: WorkspaceTypeEntity
    
  - name: reactiveSearch
    description: 
      Reactive search is a general purpose search mechanism for different modules,
      and could be used in mobile apps or front-end to quickly search for a entity.
    url: reactive-search
    method: reactive
    format: reactive
  - name: importUser
    url: /user/import
    method: post
    
    description: 'Imports users, and creates their passports, and all details'
    in:
      fields:
        - name: path
          type: string
    out:
      dto: OkayResponseDto
  - name: sendEmail
    url: /email/send
    cliName: email
    method: post
    description: Send a email using default root notification configuration
    in:
      fields:
        - name: toAddress
          validate: required
          type: string
        - name: body
          validate: required
          type: string
    out:
      fields:
      - name: queueId
        type: string
  - name: listCapabilities
    cliName: list
    out:
      primitive: "[]string"
  - name: sendEmailWithProvider
    url: /emailProvider/send
    cliName: emailp
    method: post
    description: Send a text message using an specific gsm provider
    in:
      fields:
        - name: emailProvider
          type: one
          target: EmailProviderEntity
        - name: toAddress
          validate: required
          type: string
        - name: body
          validate: required
          type: string
    out:
      fields:
        - name: queueId
          type: string
  - name: inviteToWorkspace
    url: /workspace/invite
    cliName: invite
    method: post
    description: 'Invite a new person (either a user, with passport or without passport)'
    in:
      entity: WorkspaceInviteEntity
    out:
      entity: WorkspaceInviteEntity
  - name: gsmSendSms
    url: /gsm/send/sms
    cliName: sms
    method: post
    description: Send a text message using default root notification configuration
    in:
      fields:
        - name: toNumber
          validate: required
          type: string
        - name: body
          validate: required
          type: string
    out:
      fields:
        - name: queueId
          type: string
  - name: gsmSendSmsWithProvider
    url: /gsmProvider/send/sms
    cliName: smsp
    method: post
    description: Send a text message using an specific gsm provider
    in:
      fields:
        - name: gsmProvider
          type: one
          target: GsmProviderEntity
        - name: toNumber
          validate: required
          type: string
        - name: body
          validate: required
          type: string
    out:
      fields:
        - name: queueId
          type: string
  - name: classicSignin
    url: /passports/signin/classic
    cliName: in
    description: 'Signin publicly to and account using class passports (email, password)'
    method: post
    in:
      fields:
        - name: value
          type: string
          validate: required
        - name: password
          type: string
          validate: required
    out:
      dto: UserSessionDto
  - name: classicSignup
    url: /passports/signup/classic
    cliName: up
    description: >-
      Signup a user into system via public access (aka website visitors) using
      either email or phone number
    method: post
    in:
      fields:
        - name: value
          validate: required
          type: string
        - name: type
          type: enum
          of:
            - k: phonenumber
            - k: email
          validate: required
        - name: password
          type: string
          validate: required
        - name: firstName
          type: string
          validate: required
        - name: lastName
          type: string
          validate: required
        - name: inviteId
          type: string
        - name: publicJoinKeyId
          type: string
        - name: workspaceTypeId
          type: string
          validate: required
    out:
      dto: UserSessionDto
  - name: createWorkspace
    method: post
    url: /workspaces/create
    in:
      fields:
        - name: name
          type: string
        - name: workspace
          type: one
          target: WorkspaceEntity
        - name: workspaceId
          type: string
    out:
      entity: WorkspaceEntity
  - name: checkClassicPassport
    method: post
    cliName: ccp
    description: >-
      Checks if a classic passport (email, phone) exists or not, used in multi
      step authentication
    url: /workspace/passport/check
    in:
      fields:
        - name: value
          type: string
          validate: required
    out:
      fields:
        - name: exists
          type: bool
  - name: classicPassportOtp
    description: >-
      Authenticate the user publicly for classic methods using communication
      service, such as sms, call, or email
    method: post
    cliName: otp
    url: /workspace/passport/otp
    in:
      fields:
        - name: value
          type: string
          validate: required
        - name: otp
          type: string
    out:
      fields:
        - name: suspendUntil
          type: int64
        - name: session
          type: one
          target: UserSessionDto
        - name: validUntil
          type: int64
        - name: blockedUntil
          type: int64
        - name: secondsToUnblock
          type: int64
dtos:
  - name: userImport
    fields:
      - name: avatar
        type: string
      - name: passports
        type: array
        fields:
          - name: value
            type: string
          - name: password
            type: string
      - name: person
        type: one
        target: PersonEntity
      - name: address
        type: object
        fields:
          - name: street
            type: string
          - name: zipCode
            type: string
          - name: city
            type: string
          - name: country
            type: string
  - name: userRoleWorkspacePermission
    fields:
      - name: workspaceId
        type: string
      - name: userId
        type: string
      - name: roleId
        type: string
      - name: capabilityId
        type: string
      - name: type
        type: string
  - name: permissionInfo
    fields:
      - name: name
        type: string
      - name: description
        type: string
      - name: completeKey
        type: string
  - name: userRoleWorkspace
    fields:
      - name: roleId
        type: string
      - name: capabilities
        type: arrayP
        primitive: string
  - name: importRequest
    fields:
      - name: file
        type: string
  - name: okayResponse
  - name: testMail
    fields:
      - name: senderId
        type: string
      - name: toName
        type: string
      - name: toEmail
        type: string
      - name: subject
        type: string
      - name: content
        type: string
  - name: assignRole
    fields:
      - name: roleId
        type: string
      - name: userId
        type: string
      - name: visibility
        type: string
      - name: updated
        type: int64
      - name: created
        type: int64
  - name: exchangeKeyInformation
    fields:
      - name: key
        type: string
      - name: visibility
        type: string
  - name: authResult
    fields:
      - name: workspaceId
        type: string
      - name: userRoleWorkspacePermissions
        type: many2many
        target: UserRoleWorkspacePermissionDto
      - name: internalSql
        type: string
      - name: userId
        type: string
      - name: userHas
        type: arrayP
        primitive: string
      - name: workspaceHas
        type: arrayP
        primitive: string
      - name: user
        type: one
        target: UserEntity
      - name: accessLevel
        type: one
        target: UserAccessLevelDto
  - name: authContext
    fields:
      - name: skipWorkspaceId
        type: bool
      - name: workspaceId
        type: string
      - name: token
        type: string
      - name: security
        type: one
        target: SecurityModel
      - name: capabilities
        primitive: PermissionInfo
        type: arrayP
  - name: reactiveSearchResult
    fields:
      - type: string
        name: uniqueId
      - type: string
        name: phrase
      - type: string
        name: icon
      - type: string
        name: description
      - type: string
        name: group
      - type: string
        name: uiLocation
      - type: string
        name: actionFn
  - name: userAccessLevel
    fields:
      - name: capabilities
        type: arrayP
        primitive: string
      - name: userRoleWorkspacePermissions
        type: many2many
        target: UserRoleWorkspacePermissionDto
      - name: workspaces
        type: arrayP
        primitive: string
      - name: SQL
        type: string
  - name: acceptInvite
    fields:
      - name: inviteUniqueId
        type: string
      - name: visibility
        type: string
      - name: updated
        type: int64
      - name: created
        type: int64
  - name: classicAuth
    fields:
      - name: value
        type: string
        validate: required
      - name: password
        type: string
        validate: required
      - name: firstName
        type: string
        validate: required
      - name: lastName
        type: string
        validate: required
      - name: inviteId
        type: string
      - name: publicJoinKeyId
        type: string
      - name: workspaceTypeId
        type: string
  - name: emailAccountSignin
    fields:
      - name: email
        type: string
        validate: required
      - name: password
        validate: required
        type: string
  - name: phoneNumberAccountCreation
    fields:
      - name: phoneNumber
        type: string
  - name: userSession
    fields:
      - name: passport
        type: one
        target: PassportEntity
      - name: token
        type: string
      - name: exchangeKey
        type: string
      - name: userWorkspaces
        type: many2many
        target: UserWorkspaceEntity
      - name: user
        type: one
        target: UserEntity
      - name: userId
        type: string
  - name: otpAuthenticate
    fields:
      - name: value
        type: string
        validate: required
      - name: otp
        type: string
      - name: type
        type: string
        validate: required
      - name: password
        type: string
        validate: required
  - name: emailOtpResponse
    fields:
      - name: request
        type: one
        target: ForgetPasswordEntity
      - name: userSession
        type: one
        target: UserSessionDto
  - name: resetEmail
    fields:
      - name: password
        type: string
entities:
  - name: file
    description: 'File manager, uploading files and actions related.'
    fields:
      - name: name
        type: string
      - name: diskPath
        type: string
      - name: size
        type: int64
      - name: virtualPath
        type: string
      - name: type
        type: string
      - name: variations
        type: array
        fields:
          - name: name
            type: string
  - name: tableViewSizing
    cliShort: tvs
    description: >-
      Used to store meta data about user tables (in front-end, or apps for
      example) about the size of the columns
    fields:
      - name: tableName
        type: string
        validate: required
      - name: sizes
        type: string
  - name: appMenu
    cte: true
    description: 'Manages the menus in the app, (for example tab views, sidebar items, etc.)'
    fields:
      - name: label
        type: string
        translate: true
        recommended: true
      - name: href
        type: string
        recommended: true
      - name: icon
        type: string
        recommended: true
      - name: activeMatcher
        type: string
      - name: applyType
        type: string
      - name: capability
        type: one
        target: CapabilityEntity
        fields: []
  - name: backupTableMeta
    cliName: backup
    description: >-
      Keeps information about which tables to be used during backup (mostly
      internal)
    fields:
      - name: tableNameInDb
        type: string
  - name: notificationConfig
    distinctBy: workspace
    security:
      writeOnRoot: true
    description: >-
      Configuration for the notifications used in the app, such as default gsm
      number, email senders, and many more
    cliShort: config
    fields:
      - name: cascadeToSubWorkspaces
        type: bool
      - name: forcedCascadeEmailProvider
        type: bool
      - name: generalEmailProvider
        type: one
        target: EmailProviderEntity
        allowCreate: false
      - name: generalGsmProvider
        type: one
        target: GsmProviderEntity
        allowCreate: false
      - name: inviteToWorkspaceContent
        type: string
        gorm: text
      - name: inviteToWorkspaceContentExcerpt
        gorm: text
        type: string
      - name: inviteToWorkspaceContentDefault
        gorm: text
        sql: '-'
        type: string
      - name: inviteToWorkspaceContentDefaultExcerpt
        type: string
        gorm: text
        sql: '-'
      - name: inviteToWorkspaceTitle
        type: string
      - name: inviteToWorkspaceTitleDefault
        sql: '-'
        type: string
      - name: inviteToWorkspaceSender
        type: one
        target: EmailSenderEntity
      - name: accountCenterEmailSender
        type: one
        target: EmailSenderEntity
      - name: forgetPasswordContent
        gorm: text
        type: string
      - name: forgetPasswordContentExcerpt
        gorm: text
        type: string
      - name: forgetPasswordContentDefault
        gorm: text
        type: string
        sql: '-'
      - name: forgetPasswordContentDefaultExcerpt
        gorm: text
        sql: '-'
        type: string
      - name: forgetPasswordTitle
        gorm: text
        type: string
      - name: forgetPasswordTitleDefault
        gorm: text
        sql: '-'
        type: string
      - name: forgetPasswordSender
        type: one
        target: EmailSenderEntity
      - name: acceptLanguage
        type: text
      - name: confirmEmailSender
        type: one
        target: EmailSenderEntity
        fields: []
      - name: confirmEmailContent
        gorm: text
        type: string
      - name: confirmEmailContentExcerpt
        gorm: text
        type: string
      - name: confirmEmailContentDefault
        type: string
        gorm: text
        sql: '-'
      - name: confirmEmailContentDefaultExcerpt
        gorm: text
        sql: '-'
        type: string
      - name: confirmEmailTitle
        type: string
      - name: confirmEmailTitleDefault
        type: string
        sql: '-'
  - name: passportMethod
    cliShort: method
    features:
      mock: false
      msync: false
    security:
      writeOnRoot: true
    description: >-
      Login/Signup methods which are available in the app for different regions
      (Email, Phone Number, Google, etc)
    queryScope: public
    fields:
      - name: name
        translate: true
        type: string
        validate: required
      - name: type
        type: string
        validate: required
      - name: region
        type: string
        validate: required
  - name: workspaceInvite
    description: >-
      Active invitations for non-users or already users to join an specific
      workspace
    fields:
      - name: coverLetter
        type: string
      - name: targetUserLocale
        type: string
      - name: value
        type: string
        validate: required
      - name: workspace
        type: one
        target: WorkspaceEntity
        validate: required
        allowCreate: false
      - name: firstName
        type: string
        validate: required
      - name: lastName
        validate: required
        type: string
      - name: used
        type: bool
      - name: role
        type: one
        validate: required
        target: RoleEntity
        allowCreate: false
        fields: []
  - name: pendingWorkspaceInvite
    fields:
      - name: value
        type: string
      - name: type
        type: string
      - name: coverLetter
        type: string
      - name: workspaceName
        type: string
      - name: role
        type: one
        target: RoleEntity
        allowCreate: false
        fields: []
  - name: preference
    fields:
      - name: timezone
        type: string
  - name: token
    fields:
      - name: user
        type: one
        allowCreate: false
        target: UserEntity
        fields: []
      - name: validUntil
        type: datetime
  - name: person
    fields:
      - name: firstName
        type: string
        validate: required
      - name: lastName
        type: string
        validate: required
      - name: photo
        type: string
      - name: gender
        type: string
      - name: title
        type: string
      - name: birthDate
        type: date
  - name: userWorkspace
    cliShort: user
    description: >-
      Manage the workspaces that user belongs to (either its himselves or adding
      by invitation)
    postFormatter: UserWorkspacePostFormatter
    security:
      resolveStrategy: user
    gormMap:
      workspaceId: 'index:userworkspace_idx,unique'
      userId: 'index:userworkspace_idx,unique'
    fields:
      - name: user
        type: one
        target: UserEntity
      - name: workspace
        type: one
        target: WorkspaceEntity
        fields: []
      - name: userPermissions
        gorm: '-'
        sql: '-'
        type: arrayP
        primitive: string
      - name: rolePermission
        gorm: '-'
        sql: '-'
        type: arrayP
        primitive: UserRoleWorkspaceDto
      - name: workspacePermissions
        gorm: '-'
        sql: '-'
        type: arrayP
        primitive: string
  - name: workspaceRole
    cliShort: role
    description: >-
      Manage roles assigned to an specific workspace or created by the workspace
      itself
    fields:
      - name: userWorkspace
        type: one
        target: UserWorkspaceEntity
        idFieldGorm: 'index:workspacerole_idx,unique'
      - name: role
        type: one
        target: RoleEntity
        idFieldGorm: 'index:workspacerole_idx,unique'
        fields: []
  - name: user
    security:
      writeOnRoot: true
    description: Manage the users who are in the current app (root only)
    fields:
      - name: person
        type: one
        target: PersonEntity
        allowCreate: true
        fields: []
      - name: avatar
        type: string
  - name: userProfile
    fields:
      - name: firstName
        type: string
      - name: lastName
        type: string
  - name: workspace
    cte: true
    cliName: ws
    description: 'Fireback general user role, workspaces services.'
    fields:
      - name: description
        type: string
      - name: name
        validate: required
        type: string
      - name: type
        type: one
        target: WorkspaceTypeEntity
        validate: required
        fields: []
  - name: role
    description: 'Manage roles within the workspaces, or root configuration'
    fields:
      - name: name
        type: string
        validate: 'required,omitempty,min=1,max=200'
      - name: capabilities
        type: many2many
        target: CapabilityEntity
        allowCreate: false
  - name: capability
    cliShort: cap
    security:
      writeOnRoot: true
    description: >-
      Manage the capabilities inside the application, both builtin to core and
      custom defined ones
    fields:
      - name: name
        type: string
      - name: description
        type: string
        translate: true
  - name: workspaceConfig
    cliName: config
    distinctBy: workspace
    fields:
      - name: disablePublicWorkspaceCreation
        type: int64
        default: 1
      - name: workspace
        type: one
        target: WorkspaceEntity
        fields: []
      - name: zoomClientId
        type: string
      - name: zoomClientSecret
        type: string
      - name: allowPublicToJoinTheWorkspace
        type: bool
  - name: gsmProvider
    fields:
      - name: apiKey
        type: string
      - name: mainSenderNumber
        type: string
        validate: required
      - name: type
        validate: required
        type: enum
        of:
          - k: url
          - k: terminal
          - k: mediana
      - name: invokeUrl
        type: string
      - name: invokeBody
        type: string
  - name: workspaceType
    cliName: type
    features:
      mock: false
      msync: false
    security:
      writeOnRoot: true
    messages:
      roleIsNecessary:
        en: Role needs to be defined and exist.
      roleIsNotAccessible:
        en: Role is not accessible unfortunately. Make sure you the role chose exists.
      onlyRootRoleIsAccepted:
        en: You can only select a role which is created or belong to 'root' workspace.
      roleNeedsToHaveCapabilities:
        en: Role needs to have at least one capability before could be assigned.
      cannotCreateWorkspaceType:
        en: You cannot create workspace type due to some validation errors.
      cannotModifyWorkspaceType:
        en: You cannot modify workspace type due to some validation errors.

    description: Defines a type for workspace, and the role which it can have as a whole.
      In systems with multiple types of services, e.g. student, teachers, schools
      this is useful to set those default types and limit the access of the users.
    fields:
      - name: title
        translate: true
        type: string
        validate: 'required,omitempty,min=1,max=250'
      - name: description
        translate: true
        type: string
      - name: slug
        type: string
        validate: 'required,omitempty,min=2,max=50'
      - name: role
        type: one
        target: RoleEntity
        validate: required
        description:
          The role which will be used to define the functionality of this workspace,
          Role needs to be created before hand, and only roles which belong to root workspace
          are possible to be selected
        fields: []
  - name: emailProvider
    description: Thirdparty services which will send email, allows each workspace graphically
      configure their token without the need of restarting servers
    security:
      writeOnRoot: true
    fields:
      - name: type
        validate: required
        type: enum
        of:
          - k: terminal
          - k: sendgrid
      - name: apiKey
        type: string
  - name: emailSender
    security:
      writeOnRoot: true
    description: >-
      All emails going from the system need to have a virtual sender (nick name,
      email address, etc)
    fields:
      - name: fromName
        type: string
        validate: required
      - name: fromEmailAddress
        type: string
        gorm: unique
        validate: required
      - name: replyTo
        type: string
        validate: required
      - name: nickName
        validate: required
        type: string
  - name: phoneConfirmation
    fields:
      - name: user
        target: UserEntity
        allowCreate: false
        type: one
        fields: []
      - name: status
        type: string
      - name: phoneNumber
        type: string
      - name: key
        type: string
      - name: expiresAt
        type: string
  - name: publicJoinKey
    description: Joining to different workspaces using a public link directly
    fields:
      - name: role
        type: one
        allowCreate: false
        target: RoleEntity
      - name: workspace
        type: one
        allowCreate: false
        target: WorkspaceEntity
        fields: []
  - name: emailConfirmation
    fields:
      - name: user
        target: UserEntity
        allowCreate: false
        type: one
        fields: []
      - name: status
        type: string
      - name: email
        type: string
      - name: key
        type: string
      - name: expiresAt
        type: string
  - name: passport
    description:
      Represent a mean to login in into the system, each user could have multiple passport (email, phone)
      and authenticate into the system.
    security:
      writeOnRoot: true
    fields:
      - name: type
        type: string
        validate: required
      - name: user
        type: one
        target: UserEntity
        fields: []
      - name: value
        type: string
        validate: required
        gorm: unique
      - name: password
        type: string
        json: '-'
        yaml: '-'
      - name: confirmed
        type: bool
      - name: accessToken
        type: string
  - name: regionalContent
    cliShort: rc
    security:
      writeOnRoot: true
    description: >-
      Email templates, sms templates or other textual content which can be
      accessed.
    fields:
      - name: content
        type: html
        validate: required
      - name: region
        validate: required
        type: string
      - name: title
        type: string
      - name: languageId
        validate: required
        gorm: 'index:regional_content_index,unique'
        type: string
      - name: keyGroup
        validate: required
        type: enum
        of:
          - k: SMS_OTP
            description: Used when an email would be sent with one time password
          - k: EMAIL_OTP
            description: Used when an sms would be sent with one time password
        gorm: 'index:regional_content_index,unique'
  - name: forgetPassword
    fields:
      - name: user
        target: UserEntity
        allowCreate: false
        type: one
      - name: passport
        target: PassportEntity
        allowCreate: false
        type: one
        fields: []
      - name: status
        type: string
      - name: validUntil
        type: datenano
      - name: blockedUntil
        type: datenano
      - name: secondsToUnblock
        type: int64
      - name: otp
        type: string
      - name: recoveryAbsoluteUrl
        type: string
        sql: '-'
messages:
  dataTypeDoesNotExistsInFireback:
    en: This data type does not exist in fireback. %name %location
  inviteToWorkspaceMailSenderMissing:
    en: >-
      We cannot send the invitation via email address, because sender email is
      not available, or not configurated.
    fa: >-
      امکان ارسال دعوت نامه از طریق ایمیل وجود ندارد، چون مدیریت تنظیمات لازم
      برای ایمیل را انجام نداده یا آن را برای شما محدود کرده است.
  userWhichHasThisTokenDoesNotExist:
    en: User which has this token does not exists
    fa: >-
      کاربری که با این دسترسی وارد شده بود وجود ندارد. لطفا دوباره به سیستم وارد
      شوید
  provideTokenInAuthorization:
    en: >-
      Request requires authroization, please make sure you are logged in, and
      have enough access level
    fa: شما باید توکن دسترسی را در بخش هدر و قسمت authorization وارد کنید
  userNotFoundOrDeleted:
    en: >-
      User not found, your account might be deleted, or access level has been
      reduced.
    fa: >-
      کاربر پیدا نشد ممکن است اکانت حذف شده باشد یا سطح دسترسی آن کاهش پیدا کرده
      باشد
  selectWorkspaceId:
    en: You need to select a correct workspace-id in header section
    fa: شما باید تیم یا ورک اسپیس را در بخش هدر با فیلد workspace-id تعیین کنید
  emailConfigurationMissing:
    en: Email configuration is not available
  gsmConfigurationIsNotAvailable:
    en: GSM Services configuration is not available
  emailConfigurationIsNotAvailable:
    en: Email configuration is not available
  passportUserNotAvailable:
    en: User with this passport is not available at this moment
  userDoesNotExist:
    en: User is not available.
  alreadyConfirmed:
    en: Already confirmed
  emailNotFound:
    en: Email is not found
  invitationExpired:
    en: Invitation has been expired.
  passwordRequired:
    en: Password is required
  passportNotAvailable:
    en: This passport is not available. Please check credentials and try again
  resetNotFound:
    en: Reset not found
  passportNotFound:
    en: This passport is not available. Please check credentials and try again
  otaRequestBlockedUntil:
    en: Request is blocked until.
  emailIsNotConfigured:
    en: Email server is not configured
  otpCodeInvalid:
    en: Otp code is invalid
  invalidContent:
    en: Body content is not correct. You need a valid json.
  bodyIsMissing:
    en: Body content is not correct. You need a valid json.
  notEnoughPermission:
    en: You do not have enough permission for this section
  invalidExchangeKey:
    en: Invalid exchange key
  smsNotSent:
    en: Sending text message has failed.
  invokeUrlMissing:
    en: Invoking url is missing
  fileNotFound:
    en: File not found
  validationFailedOnSomeFields:
    en: Validation has failed on some fields
  actionOnlyInRoot:
    en: This action is only allowed when user belongs to root workspace, and root is selected
description: This is the fireback core module, which includes everything. In fact you could say workspaces is fireback itself. Maybe in the future that would be changed
