package workspaces

/*
*	Generated by fireback 1.2.0
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
 */
import (
	"encoding/json"
	"fmt"
	"strings"

	"github.com/urfave/cli"
)

func CastPermissionInfoFromCli(c *cli.Context) *PermissionInfoDto {
	template := &PermissionInfoDto{}
	if c.IsSet("name") {
		template.Name = c.String("name")
	}
	if c.IsSet("description") {
		template.Description = c.String("description")
	}
	if c.IsSet("complete-key") {
		template.CompleteKey = c.String("complete-key")
	}
	return template
}

var PermissionInfoDtoCommonCliFlagsOptional = []cli.Flag{
	&cli.StringFlag{
		Name:     "wid",
		Required: false,
		Usage:    "Provide workspace id, if you want to change the data workspace",
	},
	&cli.StringFlag{
		Name:     "uid",
		Required: false,
		Usage:    "Unique Id - external unique hash to query entity",
	},
	&cli.StringFlag{
		Name:     "pid",
		Required: false,
		Usage:    " Parent record id of the same type",
	},
	&cli.StringFlag{
		Name:     "name",
		Required: false,
		Usage:    `name`,
	},
	&cli.StringFlag{
		Name:     "description",
		Required: false,
		Usage:    `description`,
	},
	&cli.StringFlag{
		Name:     "complete-key",
		Required: false,
		Usage:    `completeKey`,
	},
}

type PermissionInfoDto struct {
	Name        string `json:"name" yaml:"name"        `
	Description string `json:"description" yaml:"description"        `
	CompleteKey string `json:"completeKey" yaml:"completeKey"        `
}
type PermissionInfoDtoList struct {
	Items []*PermissionInfoDto
}

func NewPermissionInfoDtoList(items []*PermissionInfoDto) *PermissionInfoDtoList {
	return &PermissionInfoDtoList{
		Items: items,
	}
}
func (x *PermissionInfoDtoList) Json() string {
	if x != nil {
		str, _ := json.MarshalIndent(x, "", "  ")
		return (string(str))
	}
	return ""
}
func (x *PermissionInfoDto) Json() string {
	if x != nil {
		str, _ := json.MarshalIndent(x, "", "  ")
		return (string(str))
	}
	// Intentional trim (so strings lib is always imported)
	return strings.TrimSpace("")
}
func (x *PermissionInfoDto) JsonPrint() {
	fmt.Println(x.Json())
}

// This is an experimental way to create new dtos, with exluding the pointers as helper.
func NewPermissionInfoDto(
	Name string,
	Description string,
	CompleteKey string,
) PermissionInfoDto {
	return PermissionInfoDto{
		Name:        Name,
		Description: Description,
		CompleteKey: CompleteKey,
	}
}
