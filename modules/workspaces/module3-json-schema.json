{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/torabian/fireback/modules/workspaces/module3",
  "$ref": "#/definitions/Module3",
  "definitions": {
    "EntitySecurityModel": {
      "properties": {
        "writeOnRoot": {
          "type": "boolean",
          "description": "Only users which belong to root and actively selected the root workspace can write to this entity from Fireback default functionality"
        },
        "resolveStrategy": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "writeOnRoot",
        "resolveStrategy"
      ]
    },
    "GormOverrideMap": {
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3": {
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Represents where is the location of the module in app tree. Similar to PHP namespacing sytem it be used to explicitly as export path of the actions for client frameworks"
        },
        "description": {
          "type": "string",
          "description": "Description of module and it's purpose. Used in code gen and creating documents."
        },
        "version": {
          "type": "string",
          "description": "Version of the module. Helpful for different code generation phases but it's not necessary."
        },
        "meta-workspace": {
          "type": "boolean",
          "description": "Magic property for Fireback WorkspacesModule3.yml file. It's gonna be true only in a single file internally in Fireback"
        },
        "name": {
          "type": "string",
          "description": "Name of the module. Needs to be lower camel case and Module.go and Module.dyno.go will be generated based on this name."
        },
        "entities": {
          "items": {
            "$ref": "#/definitions/Module3Entity"
          },
          "type": "array",
          "description": "List of entities that module contains. Entities are basically tables in database with their mapping on golang and general actions generated for them"
        },
        "tasks": {
          "items": {
            "$ref": "#/definitions/Module3Task"
          },
          "type": "array",
          "description": "Tasks are actions which are triggered by a queue message or a cron job."
        },
        "dtos": {
          "items": {
            "$ref": "#/definitions/Module3Dto"
          },
          "type": "array",
          "description": "Dtos are basically golang structs with some additional functionality which can be used for request/response actions"
        },
        "actions": {
          "items": {
            "$ref": "#/definitions/Module3Action"
          },
          "type": "array",
          "description": "Actions are similar to controllers in other frameworks. They are custom functionality available via CLI or Http requests and developer need to implement their logic"
        },
        "macros": {
          "items": {
            "$ref": "#/definitions/Module3Macro"
          },
          "type": "array",
          "description": "Macros are extra definition or templates which will modify the module and able to add extra fields or tables before the codegen occures."
        },
        "remotes": {
          "items": {
            "$ref": "#/definitions/Module3Remote"
          },
          "type": "array",
          "description": "Remotes are definition of external services which could be contacted via http and Fireback developer can make them typesafe by defining them here."
        },
        "queries": {
          "items": {
            "$ref": "#/definitions/Module3Query"
          },
          "type": "array",
          "description": "Queries are set of SQL queries that developer writes and Fireback generates tools for fetching them from database to golang code."
        },
        "config": {
          "items": {
            "$ref": "#/definitions/Module3ConfigField"
          },
          "type": "array",
          "description": "An interesting way of defining env variables"
        },
        "messages": {
          "$ref": "#/definitions/Module3Message",
          "description": "Messages are translatable strings which will be used as errors and other types of messages and become automatically picked via user locale."
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Action": {
      "properties": {
        "name": {
          "type": "string",
          "description": "General name of the action used for generating code and CLI commands"
        },
        "cliName": {
          "type": "string",
          "description": "Overrides the CLI action name if specified otherwise defaults to Name"
        },
        "actionAliases": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "CLI command aliases for shorter action names"
        },
        "url": {
          "type": "string",
          "description": "HTTP route of the action; if not specified the action is CLI-only"
        },
        "method": {
          "type": "string",
          "enum": [
            "post",
            "get",
            "delete",
            "reactive"
          ],
          "description": "HTTP method type including standard and Fireback-specific methods"
        },
        "query": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array",
          "description": "Type-safe query parameters for CLI and HTTP requests"
        },
        "description": {
          "type": "string",
          "description": "Action description used in API specs and documentation"
        },
        "format": {
          "type": "string",
          "description": "Higher-level request format such as POST_ONE PATCH_ONE"
        },
        "in": {
          "$ref": "#/definitions/Module3ActionBody",
          "description": "Request body definition similar to HTTP request body"
        },
        "out": {
          "$ref": "#/definitions/Module3ActionBody",
          "description": "Response body definition similar to HTTP response body"
        },
        "security": {
          "$ref": "#/definitions/SecurityModel",
          "description": "Defines access control similar to middleware checking permissions"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3ActionBody": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        },
        "dto": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "primitive": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3ConfigField": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": {
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3ConfigField"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Dto": {
      "properties": {
        "name": {
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Entity": {
      "properties": {
        "permissions": {
          "items": {
            "$ref": "#/definitions/Module3Permission"
          },
          "type": "array"
        },
        "actions": {
          "items": {
            "$ref": "#/definitions/Module3Action"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The entity name is crucial as it determines database table names and is used by Fireback's Go and code generation tools; note that changing an entity name does not delete previously created entities requiring manual file deletion and only camelCase naming is supported."
        },
        "distinctBy": {
          "type": "string",
          "enum": [
            "workspace",
            "user"
          ],
          "description": "You can ensure there is only one record of the entity per user or workspace using this option for example if you want only one credit card per workspace set distinctBy: workspace and it will do the job"
        },
        "features": {
          "$ref": "#/definitions/Module3EntityFeatures"
        },
        "table": {
          "type": "string"
        },
        "useFields": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "security": {
          "$ref": "#/definitions/EntitySecurityModel",
          "description": "Manages the entity models"
        },
        "prependScript": {
          "type": "string"
        },
        "messages": {
          "$ref": "#/definitions/Module3Message"
        },
        "prependCreateScript": {
          "type": "string"
        },
        "prependUpdateScript": {
          "type": "string"
        },
        "noQuery": {
          "type": "boolean"
        },
        "access": {
          "type": "string"
        },
        "queryScope": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/Module3Http"
        },
        "patch": {
          "type": "boolean"
        },
        "queries": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "get": {
          "type": "boolean"
        },
        "gormMap": {
          "$ref": "#/definitions/GormOverrideMap"
        },
        "query": {
          "type": "boolean"
        },
        "post": {
          "type": "boolean"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        },
        "cliName": {
          "type": "string"
        },
        "cliShort": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description about the purpose of the entity. It will be used in CLI and codegen documentation."
        },
        "cte": {
          "type": "boolean",
          "description": "CTE is a common recursive feature of an entity; enabling it generates SQL for recursive parent-child CTE queries and makes it available in Golang."
        },
        "postFormatter": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3EntityFeatures": {
      "properties": {
        "mock": {
          "type": "boolean"
        },
        "msync": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Field": {
      "properties": {
        "recommended": {
          "type": "boolean"
        },
        "linkedTo": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "primitive": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "rootClass": {
          "type": "string"
        },
        "validate": {
          "type": "string"
        },
        "excerptSize": {
          "type": "integer"
        },
        "default": true,
        "translate": {
          "type": "boolean"
        },
        "unsafe": {
          "type": "boolean"
        },
        "allowCreate": {
          "type": "boolean"
        },
        "module": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "json": {
          "type": "string"
        },
        "of": {
          "items": {
            "$ref": "#/definitions/Module3FieldOf"
          },
          "type": "array"
        },
        "yaml": {
          "type": "string"
        },
        "idFieldGorm": {
          "type": "string"
        },
        "computedType": {
          "type": "string"
        },
        "computedTypeClass": {
          "type": "string"
        },
        "matches": {
          "items": {
            "$ref": "#/definitions/Module3FieldMatch"
          },
          "type": "array"
        },
        "gormMap": {
          "$ref": "#/definitions/GormOverrideMap"
        },
        "sql": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3FieldMatch": {
      "properties": {
        "dto": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3FieldOf": {
      "properties": {
        "k": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Http": {
      "properties": {
        "query": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Macro": {
      "properties": {
        "using": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fields": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Message": {
      "additionalProperties": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "type": "object"
    },
    "Module3Permission": {
      "properties": {
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Query": {
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "affects": {
          "type": "boolean"
        },
        "columns": {
          "$ref": "#/definitions/Module3ActionBody"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Remote": {
      "properties": {
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "out": {
          "$ref": "#/definitions/Module3ActionBody"
        },
        "in": {
          "$ref": "#/definitions/Module3ActionBody"
        },
        "query": {
          "items": {
            "$ref": "#/definitions/Module3Field"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Task": {
      "properties": {
        "triggers": {
          "items": {
            "$ref": "#/definitions/Module3Trigger"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "in": {
          "$ref": "#/definitions/Module3ActionBody"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "Module3Trigger": {
      "properties": {
        "cron": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "PermissionInfo": {
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "completeKey": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SecurityModel": {
      "properties": {
        "allowOnRoot": {
          "type": "boolean"
        },
        "requires": {
          "items": {
            "$ref": "#/definitions/PermissionInfo"
          },
          "type": "array"
        },
        "resolveStrategy": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "allowOnRoot",
        "requires",
        "resolveStrategy"
      ]
    }
  }
}