/*
*	Generated by fireback 1.1.28
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
*/
    import {
        BaseDto,
        BaseEntity,
    } from "../../core/definitions"
// In this section we have sub entities related to this object
// Class body
export type PassportMethodEntityKeys =
  keyof typeof PassportMethodEntity.Fields;
export class PassportMethodEntity extends BaseEntity {
  public children?: PassportMethodEntity[] | null;
  public type?: "email" | "phone" | "google" | null;
  /**
  The region which would be using this method of passports for authentication. In Fireback open-source, only 'global' is available.
  */
  public region?: "global" | null;
  public static Navigation = {
      edit(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/passport-method/edit/${uniqueId}`;
      },
      create(locale?: string) {
          return `${locale ? '/' + locale : ''}/passport-method/new`;
      },
      single(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/passport-method/${uniqueId}`;
      },
      query(params: any = {}, locale?: string) {
          return `${locale ? '/' + locale : ''}/passport-methods`;
      },
      /**
      * Use R series while building router in CRA or nextjs, or react navigation for react Native
      * Might be useful in Angular as well.
      **/
      Redit: "passport-method/edit/:uniqueId",
      Rcreate: "passport-method/new",
      Rsingle: "passport-method/:uniqueId",
      Rquery: "passport-methods",
  };
  public static definition = {
  "name": "passportMethod",
  "features": {
    "mock": false,
    "msync": false
  },
  "security": {
    "writeOnRoot": true,
    "resolveStrategy": "workspace"
  },
  "gormMap": {},
  "fields": [
    {
      "name": "type",
      "type": "enum",
      "validate": "oneof=email phone google,required",
      "of": [
        {
          "k": "email",
          "description": "Authenticate users using email"
        },
        {
          "k": "phone",
          "description": "Authenticat users using phone number, can be sms, calls, or whatsapp."
        },
        {
          "k": "google",
          "description": "Users can be authenticated using their google account"
        }
      ],
      "computedType": "\"email\" | \"phone\" | \"google\"",
      "gormMap": {}
    },
    {
      "name": "region",
      "description": "The region which would be using this method of passports for authentication. In Fireback open-source, only 'global' is available.",
      "type": "enum",
      "validate": "required,oneof=global",
      "default": "global",
      "of": [
        {
          "k": "global"
        }
      ],
      "computedType": "\"global\"",
      "gormMap": {}
    }
  ],
  "cliShort": "method",
  "description": "Login/Signup methods which are available in the app for different regions (Email, Phone Number, Google, etc)"
}
public static Fields = {
  ...BaseEntity.Fields,
      type: `type`,
      region: `region`,
}
}
