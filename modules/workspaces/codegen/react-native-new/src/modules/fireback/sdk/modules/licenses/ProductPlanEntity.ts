/*
*	Generated by fireback 1.1.27
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
*/
    import {
        BaseDto,
        BaseEntity,
    } from "../../core/definitions"
    import {
        PriceTagEntity,
    } from "../currency/PriceTagEntity"
    import {
        CapabilityEntity,
    } from "../workspaces/CapabilityEntity"
    import {
        LicensableProductEntity,
    } from "./LicensableProductEntity"
// In this section we have sub entities related to this object
export class ProductPlanPermissions extends BaseEntity {
  public capability?: CapabilityEntity | null;
      capabilityId?: string | null;
}
// Class body
export type ProductPlanEntityKeys =
  keyof typeof ProductPlanEntity.Fields;
export class ProductPlanEntity extends BaseEntity {
  public children?: ProductPlanEntity[] | null;
  public name?: string | null;
  public duration?: number | null;
  public product?: LicensableProductEntity | null;
      productId?: string | null;
  public priceTag?: PriceTagEntity | null;
      priceTagId?: string | null;
  public permissions?: ProductPlanPermissions[] | null;
  public static Navigation = {
      edit(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plan/edit/${uniqueId}`;
      },
      create(locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plan/new`;
      },
      single(uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plan/${uniqueId}`;
      },
      query(params: any = {}, locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plans`;
      },
      /**
      * Use R series while building router in CRA or nextjs, or react navigation for react Native
      * Might be useful in Angular as well.
      **/
      Redit: "product-plan/edit/:uniqueId",
      Rcreate: "product-plan/new",
      Rsingle: "product-plan/:uniqueId",
      Rquery: "product-plans",
      rPermissionsCreate: "product-plan/:linkerId/permissions/new",
      rPermissionsEdit: "product-plan/:linkerId/permissions/edit/:uniqueId",
      editPermissions(linkerId: string, uniqueId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plan/${linkerId}/permissions/edit/${uniqueId}`;
      },
      createPermissions(linkerId: string, locale?: string) {
          return `${locale ? '/' + locale : ''}/product-plan/${linkerId}/permissions/new`;
      },
  };
  public static definition = {
  "name": "productPlan",
  "features": {},
  "queryScope": "public",
  "http": {},
  "gormMap": {},
  "fields": [
    {
      "IsVirtualObject": false,
      "name": "name",
      "type": "string",
      "validate": "required,omitempty,min=1,max=100",
      "translate": true,
      "computedType": "string",
      "gormMap": {}
    },
    {
      "IsVirtualObject": false,
      "name": "duration",
      "type": "int64",
      "validate": "required",
      "computedType": "number",
      "gormMap": {}
    },
    {
      "IsVirtualObject": false,
      "name": "product",
      "type": "one",
      "target": "LicensableProductEntity",
      "validate": "required",
      "computedType": "LicensableProductEntity",
      "gormMap": {}
    },
    {
      "IsVirtualObject": false,
      "name": "priceTag",
      "type": "one",
      "target": "PriceTagEntity",
      "module": "currency",
      "provider": "github.com/torabian/fireback/modules",
      "computedType": "PriceTagEntity",
      "gormMap": {}
    },
    {
      "IsVirtualObject": false,
      "linkedTo": "ProductPlanEntity",
      "name": "permissions",
      "type": "array",
      "computedType": "ProductPlanPermissions[]",
      "gormMap": {},
      "fullName": "ProductPlanPermissions",
      "fields": [
        {
          "IsVirtualObject": false,
          "name": "capability",
          "type": "one",
          "target": "CapabilityEntity",
          "module": "workspaces",
          "computedType": "CapabilityEntity",
          "gormMap": {}
        }
      ]
    }
  ],
  "cliName": "plan"
}
public static Fields = {
  ...BaseEntity.Fields,
      name: `name`,
      duration: `duration`,
          productId: `productId`,
      product$: `product`,
        product: LicensableProductEntity.Fields,
          priceTagId: `priceTagId`,
      priceTag$: `priceTag`,
        priceTag: PriceTagEntity.Fields,
      permissions$: `permissions`,
      permissionsAt: (index: number) => {
        return {
          $: `permissions[${index}]`,
  ...BaseEntity.Fields,
          capabilityId: `permissions[${index}].capabilityId`,
      capability$: `permissions[${index}].capability`,
        capability: CapabilityEntity.Fields,
        };
      },
}
}
