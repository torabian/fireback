package abac

/*
*	Generated by fireback 1.2.2
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
 */
import (
	"encoding/json"
	"fmt"
	"strings"

	"github.com/torabian/fireback/modules/fireback"
	"github.com/urfave/cli"
)

func CastEmailAccountSigninFromCli(c *cli.Context) *EmailAccountSigninDto {
	template := &EmailAccountSigninDto{}
	if c.IsSet("email") {
		template.Email = c.String("email")
	}
	if c.IsSet("password") {
		template.Password = c.String("password")
	}
	return template
}

var EmailAccountSigninDtoCommonCliFlagsOptional = []cli.Flag{
	&cli.StringFlag{
		Name:     "wid",
		Required: false,
		Usage:    "Provide workspace id, if you want to change the data workspace",
	},
	&cli.StringFlag{
		Name:     "uid",
		Required: false,
		Usage:    "Unique Id - external unique hash to query entity",
	},
	&cli.StringFlag{
		Name:     "pid",
		Required: false,
		Usage:    " Parent record id of the same type",
	},
	&cli.StringFlag{
		Name:     "email",
		Required: true,
		Usage:    `email (string)`,
	},
	&cli.StringFlag{
		Name:     "password",
		Required: true,
		Usage:    `password (string)`,
	},
}

type EmailAccountSigninDto struct {
	Email    string `json:"email" xml:"email" yaml:"email"  validate:"required"        `
	Password string `json:"password" xml:"password" yaml:"password"  validate:"required"        `
}
type EmailAccountSigninDtoList struct {
	Items []*EmailAccountSigninDto
}

func NewEmailAccountSigninDtoList(items []*EmailAccountSigninDto) *EmailAccountSigninDtoList {
	return &EmailAccountSigninDtoList{
		Items: items,
	}
}
func (x *EmailAccountSigninDtoList) Json() string {
	if x != nil {
		str, _ := json.MarshalIndent(x, "", "  ")
		return (string(str))
	}
	return ""
}
func (x *EmailAccountSigninDto) Json() string {
	if x != nil {
		str, _ := json.MarshalIndent(x, "", "  ")
		return (string(str))
	}
	// Intentional trim (so strings lib is always imported)
	return strings.TrimSpace("")
}
func (x *EmailAccountSigninDto) JsonPrint() {
	fmt.Println(x.Json())
	// Somehow to make the import always needed, makes no sense.
	_ = fireback.Body
}

// This is an experimental way to create new dtos, with exluding the pointers as helper.
func NewEmailAccountSigninDto(
	Email string,
	Password string,
) EmailAccountSigninDto {
	return EmailAccountSigninDto{
		Email:    Email,
		Password: Password,
	}
}
