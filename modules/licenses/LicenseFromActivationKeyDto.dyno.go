package licenses

/*
*	Generated by fireback 1.1.18
*	Written by Ali Torabi.
*	Checkout the repository for licenses and contribution: https://github.com/torabian/fireback
 */
import (
	"encoding/json"
	"fmt"
	"github.com/urfave/cli"
	"strings"
)

func CastLicenseFromActivationKeyFromCli(c *cli.Context) *LicenseFromActivationKeyDto {
	template := &LicenseFromActivationKeyDto{}
	if c.IsSet("activation-key-id") {
		value := c.String("activation-key-id")
		template.ActivationKeyId = &value
	}
	if c.IsSet("machine-id") {
		value := c.String("machine-id")
		template.MachineId = &value
	}
	return template
}

var LicenseFromActivationKeyDtoCommonCliFlagsOptional = []cli.Flag{
	&cli.StringFlag{
		Name:     "wid",
		Required: false,
		Usage:    "Provide workspace id, if you want to change the data workspace",
	},
	&cli.StringFlag{
		Name:     "uid",
		Required: false,
		Usage:    "uniqueId (primary key)",
	},
	&cli.StringFlag{
		Name:     "pid",
		Required: false,
		Usage:    " Parent record id of the same type",
	},
	&cli.StringFlag{
		Name:     "activation-key-id",
		Required: false,
		Usage:    "activationKeyId",
	},
	&cli.StringFlag{
		Name:     "machine-id",
		Required: false,
		Usage:    "machineId",
	},
}

type LicenseFromActivationKeyDto struct {
	ActivationKeyId *string `json:"activationKeyId" yaml:"activationKeyId"       `
	// Datenano also has a text representation
	MachineId *string `json:"machineId" yaml:"machineId"       `
	// Datenano also has a text representation
}

func (x *LicenseFromActivationKeyDto) Json() string {
	if x != nil {
		str, _ := json.MarshalIndent(x, "", "  ")
		return (string(str))
	}
	// Intentional trim (so strings lib is always imported)
	return strings.TrimSpace("")
}
func (x *LicenseFromActivationKeyDto) JsonPrint() {
	fmt.Println(x.Json())
}

// This is an experimental way to create new dtos, with exluding the pointers as helper.
func NewLicenseFromActivationKeyDto(
	ActivationKeyId string,
	MachineId string,
) LicenseFromActivationKeyDto {
	return LicenseFromActivationKeyDto{
		ActivationKeyId: &ActivationKeyId,
		MachineId:       &MachineId,
	}
}
