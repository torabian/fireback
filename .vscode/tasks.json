{
  "version": "2.0.0",
  "tasks": [
    {
      "problemMatcher": [],
      "label": "Generate new module",
      "type": "shell",
      "command": "${workspaceFolder}/artifacts/fireback/f gen module --name \"modules/${input:modulename}\"",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "problemMatcher": [],
      "label": "Generate UI Entity from backend",
      "type": "shell",
      "command": "${workspaceFolder}/artifacts/fireback/f gen react-ui --entity-path ${input:getmodules} --path ${input:getuipath}",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "problemMatcher": [],
      "label": "Reconfig project",
      "type": "shell",
      "command": "${workspaceFolder}/artifacts/fireback/f gen reconfig --project ${input:projectnamespace} --binary-name ${input:binaryname} --description ${input:description}",
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    }
  ],
  "inputs": [
    {
      "id": "getmodules",
      "type": "command",
      "command": "shellCommand.execute",
      "args": {
        "command": "${workspaceFolder}/artifacts/fireback/f gen entities",
        "cwd": "${workspaceFolder}",
        "description": "The module that you are looking for entity inside",
        "env": {
          "HOME": "~",
          "WORKSPACE": "${workspaceFolder[0]}",
          "FILE": "${file}",
          "PROJECT": "${workspaceFolderBasename}"
        }
      }
    },
    {
      "id": "getuipath",
      "description": "The address of the generated content",
      "default": "src/modules/test",
      "type": "promptString"
    },
    {
      "id": "modulename",
      "description": "Module name (prefer lower string) it will be created in modules folder",
      "default": "",
      "type": "promptString"
    },
    {
      "id": "binaryname",
      "description": "Binary short name (1-4 characters, to access the project on cli)",
      "default": "",
      "type": "promptString"
    },
    {
      "id": "projectnamespace",
      "description": "Name - Lowercase with dash project name which will be used as folders",
      "default": "",
      "type": "promptString"
    },
    {
      "id": "description",
      "description": "Project description in English",
      "default": "New project backend",
      "type": "promptString"
    },
    {
      "id": "languages",
      "description": "Languages that this project supports",
      "default": "en, fa",
      "type": "promptString"
    },

  ]
}
