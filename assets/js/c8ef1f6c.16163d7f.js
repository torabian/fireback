"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2579],{5867:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"first-fireback-project","title":"First fireback project","description":"In this document, we are going to create a new project, and build it both on golang side, and react.js side. Also we are going to build the project,","source":"@site/docs/first-fireback-project.mdx","sourceDirName":".","slug":"/first-fireback-project","permalink":"/fireback/docs/first-fireback-project","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/first-fireback-project.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"First fireback project","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Download and install fireback","permalink":"/fireback/docs/download-and-install-fireback"},"next":{"title":".env File and configuration","permalink":"/fireback/docs/env-configuration"}}');var i=o(4848),r=o(8453);const a={title:"First fireback project",sidebar_position:3},c=void 0,s={},d=[{value:"Make sure you have installed the fireback.",id:"make-sure-you-have-installed-the-fireback",level:2},{value:"Create a new project",id:"create-a-new-project",level:2},{value:"Important: new vs init",id:"important-new-vs-init",level:2},{value:"Fireback new options",id:"fireback-new-options",level:2},{value:"Make the project and init",id:"make-the-project-and-init",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"In this document, we are going to create a new project, and build it both on golang side, and react.js side. Also we are going to build the project,\nand configurate the database connection."}),"\n",(0,i.jsx)(t.h2,{id:"make-sure-you-have-installed-the-fireback",children:"Make sure you have installed the fireback."}),"\n",(0,i.jsxs)(t.p,{children:["You can install fireback either via binaries, or ",(0,i.jsx)(t.code,{children:"go install"})," command which is explained on\n",(0,i.jsx)(t.a,{href:"/fireback/docs/download-and-install-fireback",children:"Download and install Fireback"})]}),"\n",(0,i.jsx)(t.h2,{id:"create-a-new-project",children:"Create a new project"}),"\n",(0,i.jsxs)(t.p,{children:["You can use ",(0,i.jsx)(t.code,{children:"fireback new"})," command to generate a new project. If you provide some arguments, you can\ndo it without interactive questions."]}),"\n",(0,i.jsx)(t.p,{children:"Creating a new project contains go files for backend project, vscode configuration and tasks, if you wanted\ncapacitor project wrapper, react.js front-end, and react native app boiler plate."}),"\n",(0,i.jsxs)(t.p,{children:["Please consider there are iOS and Android project in ",(0,i.jsx)(t.a,{href:"https://github.com/torabian/fireback/tree/main/clients",children:"Fireback clients folder"})," that you might copy and use yourself, but since they are incomplete, they are\nnot yet a part of the Fireback ",(0,i.jsx)(t.code,{children:"new"})," command."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"React native"})," project is not a complete boilerplate, it would be improving overtime. React.js project\nis a main focus, and could be easily wrapped into a Cordova or Capacitor."]}),"\n",(0,i.jsx)(t.h2,{id:"important-new-vs-init",children:"Important: new vs init"}),"\n",(0,i.jsxs)(t.p,{children:["Fireback ",(0,i.jsx)(t.code,{children:"new"})," command would create a new repository for your project, but ",(0,i.jsx)(t.code,{children:"init"})," would initialize a new environment (.env) file to have variables, database connection, third party API keys."]}),"\n",(0,i.jsx)(t.h2,{id:"fireback-new-options",children:"Fireback new options"}),"\n",(0,i.jsxs)(t.p,{children:["By running ",(0,i.jsx)(t.code,{children:"fireback new"})," command alone, a set of interactive questions will appear. But for more details, you can check ",(0,i.jsx)(t.code,{children:"fireback new --help"}),", which will provide:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'NAME:\n    new - Generate a new fireback project or microservice.\n\nUSAGE:\n    new [command options] [arguments...]\n\nOPTIONS:\n   --name value         Name of the project that you want to create.\n   --path value         The directory that new project will be created. If not entered, project name will be used\n   --micro              If the new project is a micro service - default is false, and we create monolith\n   --ui                 If you set --ui true, there will be a front-end project also added.\n   --mobile             If you set --mobile true, there will be a application project also added for react native\n   --capacitor          If you set --capacitor true, fireback adds capacitor project compatible with front-end (react)\n   --description value  Description of the project which would appear in few places (default: "Backend project built by Fireback")\n   --module value       Module name of the go.mod - project comes with go modules. for example --module github.com/you/project\n   --replace-fb value   Replace fireback with a local copy inside or outside project (if you ejected the fireback)\n'})}),"\n",(0,i.jsxs)(t.p,{children:["You can modify a set of arguments while creating a new project. ",(0,i.jsx)(t.code,{children:"--name"})," is the project name, which would be also\nthe folder name. All Lowercase string is standard."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--path"})," is the directory which will the project be created.\nBy default it's the current folder."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--micro"})," will make the project as a microservice, without much Fireback\nauthentication. Useful for light services do not need ABAC services."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--ui"})," means adding react.js project as well into the project, userful for webview apps and web project itself.\nThe same exact code is used for the fireback interface, which would be a starting point for you."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--mobile"})," would create the react native project. React native project has similar structure to react.js,\nbut it's still under non focused development."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--capacitor"})," would create a simple capacitor directory with some config, to convert the ",(0,i.jsx)(t.code,{children:"ui"})," folder output\neasily into a capactior project. It won't contain any UI code, just the built artifacts will go there."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--description"})," is project description, which would appear in the CLI tools and OpenAPI docs, and some other places"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--replace-fb"})," is very important tool to use a custom version of Fireback for your project. As you know,\nyou can modify the fireback, and you can have your own version. Using this command, there will be a change in\ngo.mod which would replace the fireback with a local directory instead of go pkg."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"--module"})," it's also a required and important parameter, which is identical to golang module name, often started with ",(0,i.jsx)(t.code,{children:"github.com/yourname/yourproject"}),", it would be applied to ",(0,i.jsx)(t.code,{children:"go.mod"})," file."]}),"\n",(0,i.jsx)(t.h2,{id:"make-the-project-and-init",children:"Make the project and init"}),"\n",(0,i.jsxs)(t.p,{children:["Project will be compiled as a standard golang project, also if you call ",(0,i.jsx)(t.code,{children:"make"})," command it would\nbuild it for you, just a very simple helper. The goal of Fireback is to not be anything special other\nthan an standard golang project."]}),"\n",(0,i.jsxs)(t.p,{children:["After you built your binary, you need to call ",(0,i.jsx)(t.code,{children:"fireback init"})," interactive cli command to generate a ",(0,i.jsx)(t.code,{children:".env"})," file\nwith some configuration. This tool would help you setup a lot of details for your project."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>c});var n=o(6540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);