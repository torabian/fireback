"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6782],{4485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"queries-and-vsql","title":"Queries and VSQL","description":"The fact that Fireback generates some useful queries as well as presence of the Gorm","source":"@site/docs/queries-and-vsql.mdx","sourceDirName":".","slug":"/queries-and-vsql","permalink":"/fireback/docs/queries-and-vsql","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/queries-and-vsql.mdx","tags":[],"version":"current","sidebarPosition":8.7,"frontMatter":{"title":"Queries and VSQL","sidebar_position":8.7},"sidebar":"tutorialSidebar","previous":{"title":"Tasks","permalink":"/fireback/docs/tasks-in-fireback"},"next":{"title":"Http Server running and configuration","permalink":"/fireback/docs/http-server"}}');var s=t(4848),a=t(8453);const o={title:"Queries and VSQL",sidebar_position:8.7},i=void 0,l={},c=[];function u(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The fact that Fireback generates some useful queries as well as presence of the Gorm\norm, is nothing in comparison of the power of writing custom SQL queries."}),"\n",(0,s.jsx)(n.p,{children:"In reality, ORM are not an answer to the query need. Even with Fireback and Gorm,\nthey become slow and quickly can be calling database multiple times. For any serious query\nyou need to have manual access and tune that."}),"\n",(0,s.jsxs)(n.p,{children:["Fireback provides a ",(0,s.jsx)(n.code,{children:"queries"})," array in any Module3 files, and will generate the necessary code\nto interact with the query."]}),"\n",(0,s.jsx)(n.p,{children:"Consider the following query:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"queries:\n  - columns:\n      fields:\n        - name: name\n          type: string\n    description: Sample SQL Query which would map the result into the golang struct\n    name: sample\n    query: \n      select 'Ali' as 'name'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It's very clear but worth to mention that ",(0,s.jsx)(n.code,{children:"columns"})," are the result of the query as an array mapped\nautomatically. Also the ",(0,s.jsx)(n.code,{children:"query"})," column is a golang template, which will be converted into\nsql prior to execuation."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"name"})," will be used to generate the sql file, as well as ",(0,s.jsx)(n.code,{children:"description"})," for documentation."]}),"\n",(0,s.jsxs)(n.p,{children:["In the Module.dyno.go file, you'll see a golang generated code as well as ",(0,s.jsx)(n.code,{children:"Sample.vsql"})," file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'func SampleQuery(query workspaces.QueryDSL) ([]*SampleQueryColumns, *workspaces.QueryResultMeta, error) {\n\trefl := reflect.ValueOf(&SampleQueryColumns{})\n\titems, meta, err := workspaces.ContextAwareVSqlOperation[SampleQueryColumns](\n\t\trefl, &queries.QueriesFs, "Sample.vsql", query,\n\t)\n\treturn items, meta, err\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now you can call this in your go functions, or Fireback actions."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Passing parameters are one of the most requested features"})," but yet not available."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);