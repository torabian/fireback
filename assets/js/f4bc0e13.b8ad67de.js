"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9141],{5780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"deeper/fireback-structure-and-sub-projects","title":"Fireback structure and sub projects","description":"Fireback original project (and subsequent projects built using Fireback) all follow a the same or very similar","source":"@site/docs/deeper/fireback-structure-and-sub-projects.mdx","sourceDirName":"deeper","slug":"/deeper/fireback-structure-and-sub-projects","permalink":"/fireback/docs/deeper/fireback-structure-and-sub-projects","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/deeper/fireback-structure-and-sub-projects.mdx","tags":[],"version":"current","sidebarPosition":43,"frontMatter":{"title":"Fireback structure and sub projects","sidebar_position":43},"sidebar":"tutorialSidebar","previous":{"title":"Data Management in Fireback","permalink":"/fireback/docs/deeper/data-management-in-fireback"},"next":{"title":"Translations in Fireback","permalink":"/fireback/docs/deeper/translations"}}');var s=t(4848),i=t(8453);const o={title:"Fireback structure and sub projects",sidebar_position:43},a=void 0,c={},d=[{value:".github",id:"github",level:2},{value:".jsonschemas (ignored)",id:"jsonschemas-ignored",level:2},{value:".vscode",id:"vscode",level:2},{value:"artifacts (ignored)",id:"artifacts-ignored",level:2},{value:"cmd",id:"cmd",level:2},{value:"docs",id:"docs",level:2},{value:"e2e",id:"e2e",level:2},{value:"modules",id:"modules",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Fireback original project (and subsequent projects built using Fireback) all follow a the same or very similar\nstructure."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This document might be useful for developers who want to understand Fireback more deeper,\nyou don't need it for building your apps using Fireback."]}),"\n",(0,s.jsx)(n.p,{children:"Fireback is simple, and in fact doesn't contain so many folders anyway."}),"\n",(0,s.jsx)(n.h2,{id:"github",children:".github"}),"\n",(0,s.jsx)(n.p,{children:"This folder contains github actions build for Fireback framework.\nMight be present in projects created via Fireback. Delete it if your project\ndoes not being deployed via Github or hosted there, also you can modify\nyour own apps version to your needs."}),"\n",(0,s.jsx)(n.h2,{id:"jsonschemas-ignored",children:".jsonschemas (ignored)"}),"\n",(0,s.jsx)(n.p,{children:"Fireback and Fireback projects generate jsonschemas out of Module3.yml files.\nThis is because, I wanted to have more sophisticated generated autocompletion\nper each module, but not used yet. This folder will be generated\non Fireback and Fireback projects, and can be removed via Makefile of the project."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reminder"})," You need to install Redhat Yaml VSCode extension to see autocompletion\nfor Module3 files."]}),"\n",(0,s.jsx)(n.h2,{id:"vscode",children:".vscode"}),"\n",(0,s.jsx)(n.p,{children:"This is also present in both new projects and Fireback itself, which contains\na set of tasks, settings for working on Fireback projects. Feel free\nto extend or modify it based on your needs."}),"\n",(0,s.jsx)(n.h2,{id:"artifacts-ignored",children:"artifacts (ignored)"}),"\n",(0,s.jsx)(n.p,{children:"Fireback makefiles are configured to create artifacts for different operating\nsystems inside this folder. It's ignored and will be auto generated."}),"\n",(0,s.jsx)(n.h2,{id:"cmd",children:"cmd"}),"\n",(0,s.jsxs)(n.p,{children:["A command golang community convention for having application entry points.\nCheck the ",(0,s.jsx)(n.code,{children:"main.go"})," to see further configurations."]}),"\n",(0,s.jsx)(n.p,{children:"By default, might be only a single app, but you can add new folders here and make\nmultiple application by combining different modules, just as you would with any\ngolang application."}),"\n",(0,s.jsx)(n.h2,{id:"docs",children:"docs"}),"\n",(0,s.jsx)(n.p,{children:"Documents related to Fireback."}),"\n",(0,s.jsx)(n.h2,{id:"e2e",children:"e2e"}),"\n",(0,s.jsx)(n.p,{children:"Tests, and some scripts needed for Fireback project itself. It doesn't\nexist on child projects"}),"\n",(0,s.jsx)(n.h2,{id:"modules",children:"modules"}),"\n",(0,s.jsxs)(n.p,{children:["This folder is the most imporant folder in Fireback projects, and you\ncan create your ",(0,s.jsx)(n.code,{children:"Module3.yml"})," modules here. In VSCode, CMD+SHIFT+P and ",(0,s.jsx)(n.code,{children:"Run task"}),"\nwill suggest ",(0,s.jsx)(n.code,{children:"Generate new module"})," to create them easier."]}),"\n",(0,s.jsx)(n.p,{children:"It exists on Fireback and child projects."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);