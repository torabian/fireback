"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5797],{5591:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"module3-definition","title":"Module3 Definition","description":"One of core features of Fireback framework, is that a lot of code is generated based on some yaml files.","source":"@site/docs/module3-definition.md","sourceDirName":".","slug":"/module3-definition","permalink":"/fireback/docs/module3-definition","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/module3-definition.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Configurating your project","permalink":"/fireback/docs/configurating-your-project"},"next":{"title":"Defining fields","permalink":"/fireback/docs/fields"}}');var o=i(4848),s=i(8453);const r={sidebar_position:5},a="Module3 Definition",d={},l=[{value:"Goal of the definition",id:"goal-of-the-definition",level:2},{value:"Contract in Module3",id:"contract-in-module3",level:2},{value:"Entities in Module3",id:"entities-in-module3",level:2},{value:"DistinctBy Feature on entities",id:"distinctby-feature-on-entities",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"module3-definition",children:"Module3 Definition"})}),"\n",(0,o.jsx)(n.p,{children:"One of core features of Fireback framework, is that a lot of code is generated based on some yaml files.\nBasically, fireback project consists of only these kind of modules, and generated code, slightly depends\non the fireback library version, but in the other hand we have tried to make it in a way that\ngenerated code is usuable without fireback, or in other words make it more explicit."}),"\n",(0,o.jsxs)(n.p,{children:["The thing is, the Fireback itself, is written with Fireback. Fireback original and important codebase is in\n",(0,o.jsx)(n.code,{children:"modules/workspaces"})," folder, which is Generated from ",(0,o.jsx)(n.code,{children:"modules/workspaces/WorkspaceModule3.yml"})]}),"\n",(0,o.jsx)(n.p,{children:"It took a long time before Fireback reaches to a stability that could be rewritten by itself."}),"\n",(0,o.jsxs)(n.p,{children:["Now in this document we will discuss about the Module3.yml files. When you create a new Fireback project,\nthe repository is configured to compile ",(0,o.jsx)(n.code,{children:"*Module3.yml"})," file ending. It's a convension in the Fireback ecosystem\nonly, you can configure this in other code editors. The general idea is something like code below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'{\n    "match": "\\\\Module3.yml$",\n    "cmd": "${workspaceFolder}/artifacts/fireback/f gen gof --def ${relativeFile} --relative-to ${workspaceFolder} --gof-module github.com/torabian/fireback"\n},\n'})}),"\n",(0,o.jsx)(n.p,{children:'If you are using VSCode, this already exists but you need to install "Run on Save" plugin from extensions. At the\nmoment Fireback VSCode extension does not do this.'}),"\n",(0,o.jsx)(n.h2,{id:"goal-of-the-definition",children:"Goal of the definition"}),"\n",(0,o.jsx)(n.p,{children:"Fireback Module3 file format has a goal to contain as much as detail possible about a project. Up to version 1.1.28, Entities, Dtos, Actions, Remotes, Config, and few other important services are possible to be defined via these files."}),"\n",(0,o.jsx)(n.p,{children:"In fact, you could create Fireback modules and use them on a non Fireback project and it would work totally fine,\nyou might use only the definitions, structs, and helper codes which are generated, although this is not the goal of Fireback."}),"\n",(0,o.jsx)(n.h2,{id:"contract-in-module3",children:"Contract in Module3"}),"\n",(0,o.jsx)(n.p,{children:"Module3 format is standard YAML and can be modified by any yaml read/write library. You would\nwrite these module manually or using Fireback VSCode extension. Extension at 1.1.28\ndoes not fully support all features of Fireback Module3, therefor you need to learn it\nyour self."}),"\n",(0,o.jsx)(n.p,{children:"Common contracts on writing Module3 definitions:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Everything is camelCase"}),"\n",(0,o.jsx)(n.li,{children:"Entity names is singular"}),"\n",(0,o.jsx)(n.li,{children:"array fields need to be plural"}),"\n",(0,o.jsx)(n.li,{children:"define all field types"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"entities-in-module3",children:"Entities in Module3"}),"\n",(0,o.jsx)(n.p,{children:"Entities, is a an array of entity in Fireback, which basically represents a table in database. Fireback entities\noffer more feature comparing to common ORMs, when they make entities. When you create an entity, it would\nalso create very common actions (CRUD, nested operations, array, ...) for you as well and make them a part\nof the http router and CLI. Also each entity, can define permissions on fields, or other kind of permissions\nand events related to them."}),"\n",(0,o.jsx)(n.p,{children:"When you define an entity, you often get most of things that you might need to manage them from a administration perspective, you need to create actions on top of them to add your business logic."}),"\n",(0,o.jsx)(n.h2,{id:"distinctby-feature-on-entities",children:"DistinctBy Feature on entities"}),"\n",(0,o.jsx)(n.p,{children:"In Fireback we allow some of entities to be unique, per specific workspace, user or some other conditions.\nThis is useful, when you want to make sure only one record per that condition exists on the database.\nFor example, you might want to have settings per user, but only per single user."}),"\n",(0,o.jsxs)(n.p,{children:["In such scenarios, you can define ",(0,o.jsx)(n.code,{children:"distinctBy"})," on the entity:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"entities:\n    - name: config\n      distinctBy: workspace\n      fields:\n      - name: title\n        type: string\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you make it distinct by workspace, on the entity, WorkspaceId field becomes unique, therefor you cannot have multiple create on the same, and need to use update instead of create."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Important"})," Make sure that the ",(0,o.jsx)(n.code,{children:"migration apply"})," has been called if the entity existed before. Migration for unique workspace Id might not occure via gorm migration (which Fireback is using underneath), so you might\nneed to manually migration add the unique constraint. For performance reasons, In 1.1.28 Fireback doesn't query\nand only relies on the constraint."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);