"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5907],{9613:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"deeper/ipc-bindings-generation","title":"IPC Bindings generation","description":"I wanted to use Fireback on a desktop application, and therefor a huge effort has been made to generate","source":"@site/docs/deeper/ipc-bindings-generation.mdx","sourceDirName":"deeper","slug":"/deeper/ipc-bindings-generation","permalink":"/fireback/docs/deeper/ipc-bindings-generation","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/deeper/ipc-bindings-generation.mdx","tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"title":"IPC Bindings generation","sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Stop Chaos! Angular Translations Done Right Once","permalink":"/fireback/docs/deeper/angular-translation"},"next":{"title":"Stop Chaos! React & React Native Translations Done Right Once","permalink":"/fireback/docs/deeper/react-and-react-native-translation"}}');var o=t(4848),a=t(8453);const s={title:"IPC Bindings generation",sidebar_position:100},r=void 0,c={},d=[];function p(e){const n={p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"I wanted to use Fireback on a desktop application, and therefor a huge effort has been made to generate\nIPC bindings. Some traces of the ipc code generation might be still left in Fireback, but itself is discontinued.\nThe reason is, it was much more easier to use http locally over a vague port, instead of making all\nthese complications."}),"\n",(0,o.jsx)(n.p,{children:"Nevertheless, there might be a need for this to be generated for some projects. Due to the fact it's not\na priority for me, you can open a pull-request yourself against Fireback source code."}),"\n",(0,o.jsx)(n.p,{children:"The only issue I think it might come to mind is using a http port for communication between processes might\nproduce a security risk, which would be not much important since the database will be on the disk anyway,\nand standard token based authentication is happening in the same style as web application over cloud."}),"\n",(0,o.jsx)(n.p,{children:"To prevent port collision, you can even check ports subsequently both on background services and the consumer level,\nthis method has been tested on several cases and no port collision has been reported."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);