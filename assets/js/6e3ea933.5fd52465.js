"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1748],{7691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"deeper/angular-translation","title":"Stop Chaos! Angular Translations Done Right Once","description":"Critical problems with ng translate, i18n and others","source":"@site/docs/deeper/angular-translation.mdx","sourceDirName":"deeper","slug":"/deeper/angular-translation","permalink":"/fireback/docs/deeper/angular-translation","draft":false,"unlisted":false,"editUrl":"https://github.com/torabian/fireback/tree/main/docs/docs/deeper/angular-translation.mdx","tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"title":"Stop Chaos! Angular Translations Done Right Once","author":"Ali Torabi","excerpt":"Have you ever had problem with translating an Angular application, and always end up with problems with keys, adding extra pipes, hardcoded translations? Get in this tutorial with me and we will solve this problem for once.","og_image":"/content/angular_translate_logo.png","lang":"en","sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Fireback Workspaces tables and features","permalink":"/fireback/docs/deeper/workspaces"},"next":{"title":"IPC Bindings generation","permalink":"/fireback/docs/deeper/ipc-bindings-generation"}}');var s=t(4848),i=t(8453);const o={title:"Stop Chaos! Angular Translations Done Right Once",author:"Ali Torabi",excerpt:"Have you ever had problem with translating an Angular application, and always end up with problems with keys, adding extra pipes, hardcoded translations? Get in this tutorial with me and we will solve this problem for once.",og_image:"/content/angular_translate_logo.png",lang:"en",sidebar_position:100},r=void 0,l={},c=[{value:"Critical problems with ng translate, i18n and others",id:"critical-problems-with-ng-translate-i18n-and-others",level:2},{value:"Solution is simple; And no library is needed",id:"solution-is-simple-and-no-library-is-needed",level:2},{value:"What you need before",id:"what-you-need-before",level:2},{value:"Step 1: Verify you have access to fireback",id:"step-1-verify-you-have-access-to-fireback",level:2},{value:"Step 2: Create the LocaleService",id:"step-2-create-the-localeservice",level:2},{value:"Step 3: Create a base component",id:"step-3-create-a-base-component",level:2},{value:"Step 4: Create &#39;strings&#39; folder",id:"step-4-create-strings-folder",level:2},{value:"Step 5: Create strings/strings-en.yml",id:"step-5-create-stringsstrings-enyml",level:2},{value:"Step 6: Use and config fireback language generator",id:"step-6-use-and-config-fireback-language-generator",level:2},{value:"Step 7: Make this automated with VSCode run-on-save",id:"step-7-make-this-automated-with-vscode-run-on-save",level:2},{value:"Step 8: Use translations",id:"step-8-use-translations",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"critical-problems-with-ng-translate-i18n-and-others",children:"Critical problems with ng translate, i18n and others"}),"\n",(0,s.jsx)(n.p,{children:"The significance of translations appears to be overlooked, with the second language\noften treated as an afterthought in my projects; some even begin with non-English\nstrings hardcoded in templates, only to encounter challenges later when attempting\nto modify them, as the lack of type safety prevents immediate detection of all\noccurrences, resulting in an inconsistent user experience where English words may\nunexpectedly appear in a Spanish interface,\nnegatively impacting the brand's reputation."}),"\n",(0,s.jsx)(n.p,{children:"The ng translate module, while initially a convenient tool for handling translations\nin Angular apps, often falls short in several key areas. One prevalent issue is the\nprevalence of hardcoded strings within templates, making it challenging to maintain\nand update translations efficiently. Additionally, the lack of IntelliSense support\nhampers developers' productivity, leading to potential errors and inconsistencies in\ntranslations. Moreover, the module's limited capabilities for managing different\nlanguages result in cumbersome workflows and difficulties in maintaining\nlanguage-specific content."}),"\n",(0,s.jsx)(n.p,{children:"Another significant drawback is the cumbersome process of\nstoring translations in separate JSON files, which can lead to cluttered project\nstructures and version control issues. These challenges collectively contribute to a\nsuboptimal translation experience, urging developers to seek alternative solutions\nfor their localization needs."}),"\n",(0,s.jsx)(n.h2,{id:"solution-is-simple-and-no-library-is-needed",children:"Solution is simple; And no library is needed"}),"\n",(0,s.jsx)(n.p,{children:"In fact, doing a bullet proof translation mechanism for Angular projects does not need\nanother library at all. In this tutorial we are going to solve this with two items:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Base component for all components in the app"}),"\n",(0,s.jsx)(n.li,{children:"LocaleService which will be handling changes to language and publishing it everywhere"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"what-you-need-before",children:"What you need before"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"You can apply what you learn here to new projects, as well as your existing project"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"In order to keep up with the training, you need an empty angular 2+ project. I am using\nmost recent version here, which has 'standalone' components, but if you are using older\nversion of Angular, there would be no difference."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Install fireback v1.1.9 or later. You can find the binaries for different systems here:\n",(0,s.jsx)("a",{href:"https://github.com/torabian/fireback/releases",target:"_blank",children:(0,s.jsx)(n.a,{href:"https://github.com/torabian/fireback/releases",children:"https://github.com/torabian/fireback/releases"})}),(0,s.jsx)(n.a,{href:"https://github.com/torabian/fireback/releases",children:"https://github.com/torabian/fireback/releases"})," for installers."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"I use the VSCode, and Run On Save extension is enabled. You can run the translation\nfrom CLI as well, but having this extension makes life easier by far."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-verify-you-have-access-to-fireback",children:"Step 1: Verify you have access to fireback"}),"\n",(0,s.jsx)(n.p,{children:"You need to make sure you have access to fireback binary, either installed globally,\nor you put it in the project directory, and ignored the file."}),"\n",(0,s.jsx)(n.h2,{id:"step-2-create-the-localeservice",children:"Step 2: Create the LocaleService"}),"\n",(0,s.jsx)(n.p,{children:"Here's the revised version:"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"LocaleService"})," is a simple service that would be used almost everywhere in the project,\nwith one purpose: to keep and sync the locale data."]}),"\n",(0,s.jsxs)(n.p,{children:["In this service, there is an observable called ",(0,s.jsx)(n.code,{children:"locale$"})," which we will subscribe to in\nthe component to change the dictionary of translation variables. Additionally, there is\na ",(0,s.jsx)(n.code,{children:"setLocale"})," function to set the language. For example, ",(0,s.jsx)(n.code,{children:"setLocale('en')"})," would change\nit to English."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocaleService {\n  private localeSubject = new BehaviorSubject<string>('en');\n  locale$ = this.localeSubject.asObservable();\n\n  constructor() {}\n\n  setLocale(locale: string) {\n    this.localeSubject.next(locale);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-3-create-a-base-component",children:"Step 3: Create a base component"}),"\n",(0,s.jsxs)(n.p,{children:["Creating a base component is a powerful feature of Angular and TypeScript,\nwhich makes it easy to extend some core features for every component in your project.\nIf you already have such a component in your project, you can apply the code here to that.\nIf you're starting fresh, create a new component called ",(0,s.jsx)(n.code,{children:"base.component.ts"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Important:"})," You need to use ",(0,s.jsx)(n.code,{children:"@Directive"})," instead of ",(0,s.jsx)(n.code,{children:"@Component"})," decorator; otherwise,\nAngular will not compile it."]}),"\n",(0,s.jsxs)(n.p,{children:["Firstly, we need a variable, such as ",(0,s.jsx)(n.code,{children:"s"}),", to hold the key translations for the template\nor the component. It will be ",(0,s.jsx)(n.code,{children:"protected"})," so that extending classes can actually access it,\nas well as the template file."]}),"\n",(0,s.jsxs)(n.p,{children:["Then, we need to inject the ",(0,s.jsx)(n.code,{children:"LocaleService"})," and an object of translation keys upon construction.\nThis object will hold translations for all languages (as you will see later after we generate\nthe ",(0,s.jsx)(n.code,{children:"translations.ts"})," file). In this constructor, we will call a ",(0,s.jsx)(n.code,{children:"handleLocale"})," function,\nwhich is basically a subscription to the locale, and will replace the dictionary of ",(0,s.jsx)(n.code,{children:"s"}),'\ncontent with the selected language."']}),"\n",(0,s.jsx)(n.h2,{id:"step-4-create-strings-folder",children:"Step 4: Create 'strings' folder"}),"\n",(0,s.jsxs)(n.p,{children:["How you organize the translations is up to you, in fact. I prefer to create a ",(0,s.jsx)(n.code,{children:"strings"}),"\nfolder per module and place all of their translations into that directory.\nThis way, when I move a module folder to another project or if I want to make\nit a library, I won't have to worry about the translations; they're already\nsolved and attached to the component or module."]}),"\n",(0,s.jsxs)(n.p,{children:["On the other hand, if you want to create a ",(0,s.jsx)(n.code,{children:"strings"})," folder for the entire app,\nnothing would stop you."]}),"\n",(0,s.jsx)(n.h2,{id:"step-5-create-stringsstrings-enyml",children:"Step 5: Create strings/strings-en.yml"}),"\n",(0,s.jsx)(n.p,{children:"It's critical to keep in mind that the Fireback Language Editor module assumes English\nas the primary language of the app. Simply put, English must be present, and other languages\nwill be synced with keys from that one."}),"\n",(0,s.jsxs)(n.p,{children:["Now, let's put the ",(0,s.jsx)(n.code,{children:"content"})," inside the YAML.\n",(0,s.jsxs)(n.strong,{children:["All translation keys must go under the ",(0,s.jsx)(n.code,{children:"content"})," key"]}),",\notherwise they will not be considered translations."]}),"\n",(0,s.jsx)(n.p,{children:"If you are not familiar with YAML, think of it as JSON without quotes, and remember:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"content:\n  loading: Loading...\n  done: Done :)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Is different from the code below. (Basically intention is super important)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"content:\nloading: Loading...\n  done: Done :)\n"})}),"\n",(0,s.jsx)(n.p,{children:"So far, this was all the necessary steps we needed to take for translating our app."}),"\n",(0,s.jsx)(n.h2,{id:"step-6-use-and-config-fireback-language-generator",children:"Step 6: Use and config fireback language generator"}),"\n",(0,s.jsx)(n.p,{children:"Now we need to use the Fireback language generator to simplify key generation for us."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fireback gen strings --path ./src/app/components/loader-sample/strings/strings-en.yml --targets ts --langs pl,fa\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This command will generate two additional files in the same directory:\n",(0,s.jsx)(n.code,{children:"strings-pl.yml"})," and ",(0,s.jsx)(n.code,{children:"strings-fa.yml"}),". If you open them, you will see identical\ncontent to your ",(0,s.jsx)(n.code,{children:"strings-en.yml"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Also in the same directory, you will find a ",(0,s.jsx)(n.code,{children:"translations.ts"})," file.\nIt contains content similar to the snippet below, which has generated TypeScript\nconstants for all three languages and exported them as ",(0,s.jsx)(n.code,{children:"strings"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"step-7-make-this-automated-with-vscode-run-on-save",children:"Step 7: Make this automated with VSCode run-on-save"}),"\n",(0,s.jsx)(n.p,{children:'Using the CLI each time for building the translations is cumbersome. Therefore, we utilize the "Run on save" extension in VSCode, which you can install.'}),"\n",(0,s.jsxs)(n.p,{children:["Then, in our ",(0,s.jsx)(n.code,{children:"settings.json"})," in VSCode, we need to add these rules.\n(If you've never modified this file, create a folder named ",(0,s.jsx)(n.code,{children:".vscode"})," at the root\nof your project and add ",(0,s.jsx)(n.code,{children:"settings.json"})," inside it.)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n    "emeraldwalk.runonsave": {\n        "commands": [\n            {\n                "match": "strings-([a-z][a-z]).yml$",\n                "cmd": "fireback gen strings --path ${file} --langs en,fa"\n            }\n        ]\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["It would basically detect any ",(0,s.jsx)(n.code,{children:"strings-xx.yml"})," change in the project, and will run strings\ncompiler for you."]}),"\n",(0,s.jsx)(n.h2,{id:"step-8-use-translations",children:"Step 8: Use translations"}),"\n",(0,s.jsxs)(n.p,{children:["At this stage, we're essentially ready to utilize the translation file.\nIn any component that extends from ",(0,s.jsx)(n.code,{children:"BaseComponent"}),", you'll be able to pass ",(0,s.jsx)(n.code,{children:"strings"})," and\naccess the ",(0,s.jsx)(n.code,{children:"s"})," variable both inside the component and in the template."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\nimport { BaseComponent } from '../base.component';\nimport { LocaleService } from '../../locale.service';\nimport { strings } from './strings/translations';\n\n@Component({\n  selector: 'app-loader-sample',\n  standalone: true,\n  imports: [],\n  templateUrl: './loader-sample.component.html',\n  styleUrl: './loader-sample.component.scss',\n})\nexport class LoaderSampleComponent extends BaseComponent {\n  override s = strings;\n  constructor(private locale: LocaleService) {\n    super(locale, strings);\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["And you can access ",(0,s.jsx)(n.code,{children:"s"})," and all the keys type-safely in HTML templates. ",(0,s.jsx)(n.em,{children:"As you've noticed"}),",\nwe actually do not need to pipe the translations at all, and this is a significant benefit\nboth in terms of performance and code cleanliness."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<p>{{ s.loading }}</p>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"To summarize, we have just created a robust system for adding translations to our Angular app.\nThis method will help prevent many errors, such as missing keys in certain\nlanguages and hard-coded strings for translation."}),"\n",(0,s.jsx)(n.p,{children:"The Fireback Strings CLI offers additional options that you may want to explore on your own.\nThis feature is available starting from Fireback v1.1.9"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);